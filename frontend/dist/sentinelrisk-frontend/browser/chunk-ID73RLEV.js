import{I as g}from"./chunk-VEQFYUJL.js";import{C as i,S as m,Sb as d,V as l,a as u,b as c,q as o,s as a}from"./chunk-Z6XCGGPI.js";var E=(()=>{class n{constructor(e,s){this.apiService=e,this.http=s,this.basePath="/risks"}getRisks(){return this.apiService.get(this.basePath).pipe(a(e=>e.map(s=>this.mapRiskResponse(s))),i(e=>(console.error("Erreur lors de la r\xE9cup\xE9ration des risques",e),o(()=>new Error("Impossible de r\xE9cup\xE9rer la liste des risques. Veuillez r\xE9essayer.")))))}getRisk(e){return this.apiService.get(`${this.basePath}/${e}`).pipe(a(s=>this.mapRiskResponse(s)),i(s=>(console.error(`Erreur lors de la r\xE9cup\xE9ration du risque ${e}`,s),o(()=>new Error("Impossible de r\xE9cup\xE9rer les d\xE9tails du risque. Veuillez r\xE9essayer.")))))}createRisk(e){let s=this.formatRiskRequest(e);return this.apiService.post(this.basePath,s).pipe(a(t=>this.mapRiskResponse(t)),i(t=>{console.error("Erreur lors de la cr\xE9ation du risque",t);let r=this.getErrorMessage(t)||"Impossible de cr\xE9er le risque. Veuillez r\xE9essayer.";return o(()=>new Error(r))}))}updateRisk(e,s){let t=this.formatRiskRequest(s);return this.apiService.put(`${this.basePath}/${e}`,t).pipe(a(r=>this.mapRiskResponse(r)),i(r=>{console.error(`Erreur lors de la mise \xE0 jour du risque ${e}`,r);let p=this.getErrorMessage(r)||"Impossible de mettre \xE0 jour le risque. Veuillez r\xE9essayer.";return o(()=>new Error(p))}))}updateRiskControls(e,s){let t=s.map(r=>typeof r=="string"?+r:r);return this.apiService.put(`${this.basePath}/${e}/controls`,t).pipe(a(r=>this.mapRiskResponse(r)),i(r=>{console.error(`Erreur lors de la mise \xE0 jour des contr\xF4les du risque ${e}`,r);let p=this.getErrorMessage(r)||"Impossible de mettre \xE0 jour les contr\xF4les associ\xE9s au risque. Veuillez r\xE9essayer.";return o(()=>new Error(p))}))}deleteRisk(e){return this.apiService.delete(`${this.basePath}/${e}`).pipe(i(s=>(console.error(`Erreur lors de la suppression du risque ${e}`,s),o(()=>new Error("Impossible de supprimer le risque. Veuillez r\xE9essayer.")))))}getRisksByCategory(e){return this.apiService.get(`${this.basePath}/category/${e}`).pipe(i(s=>(console.error(`Erreur lors de la r\xE9cup\xE9ration des risques de la cat\xE9gorie ${e}`,s),o(()=>new Error("Impossible de r\xE9cup\xE9rer les risques de cette cat\xE9gorie. Veuillez r\xE9essayer.")))))}getHighScoreRisks(){return this.apiService.get(`${this.basePath}/high-score`).pipe(i(e=>(console.error("Erreur lors de la r\xE9cup\xE9ration des risques \xE0 score \xE9lev\xE9",e),o(()=>new Error("Impossible de r\xE9cup\xE9rer les risques \xE0 score \xE9lev\xE9. Veuillez r\xE9essayer.")))))}formatRiskRequest(e){let s=e.categoryId||e.category?.id;return{name:e.name,description:e.description,categoryId:s,impactLevel:e.impactLevel,probabilityLevel:e.probabilityLevel,status:e.status,mitigationPlan:e.mitigationPlan}}getErrorMessage(e){if(e.error){if(typeof e.error=="string")return e.error;if(e.error.message)return e.error.message;if(typeof e.error=="object"){let s=Object.entries(e.error).map(([t,r])=>`${t}: ${r}`).join(", ");if(s)return`Erreurs de validation: ${s}`}}return e.statusText||"Une erreur est survenue"}mapRiskResponse(e){console.log("Mapping risk response:",e);let s=e.categoryId?{id:e.categoryId.toString(),name:e.categoryName||"Sans cat\xE9gorie"}:void 0,t=[];return e.controls&&Array.isArray(e.controls)?(t=e.controls.map(r=>({id:r.id?.toString(),name:r.name||`Contr\xF4le ${r.id}`,description:r.description,type:r.type||"UNKNOWN",status:r.status||"UNKNOWN",frequency:r.frequency})),console.log("Mapped controls from complete objects:",t)):e.controlIds&&Array.isArray(e.controlIds)&&(t=e.controlIds.map(r=>({id:r.toString(),name:`Contr\xF4le ${r}`,type:"UNKNOWN",status:"UNKNOWN"})),console.log("Mapped controls from IDs:",t)),c(u({},e),{id:e.id?.toString(),category:s,controls:t,score:e.riskScore||0,createdAt:e.createdAt?new Date(e.createdAt):new Date,updatedAt:e.updatedAt?new Date(e.updatedAt):new Date})}bulkCreate(e){let s=e.map(t=>({name:t.name,description:t.description,categoryName:t.categoryName,impactLevel:t.impactLevel,probabilityLevel:t.probabilityLevel,mitigationPlan:t.mitigationPlan}));return this.apiService.post(`${this.basePath}/bulk`,s).pipe(a(t=>t.map(r=>this.mapRiskResponse(r))),i(t=>{console.error("Erreur lors de la cr\xE9ation massive de risques",t);let r=this.getErrorMessage(t)||"Impossible de cr\xE9er les risques. Veuillez r\xE9essayer.";return o(()=>new Error(r))}))}importRisksFromFile(e){let s=new FormData;return s.append("file",e),this.apiService.postFormData(`${this.basePath}/bulk`,s).pipe(i(t=>{console.error("Erreur lors de l'import du fichier CSV",t);let r=this.getErrorMessage(t)||"Impossible d'importer le fichier CSV. Veuillez r\xE9essayer.";return o(()=>new Error(r))}))}static{this.\u0275fac=function(s){return new(s||n)(l(g),l(d))}}static{this.\u0275prov=m({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();export{E as a};
