{
  "version": 3,
  "sources": ["src/app/features/auth/login/login.component.ts", "src/app/features/auth/home/home.component.ts", "src/app/features/auth/logout/logout.component.ts", "src/app/features/auth/auth.module.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { KeycloakService } from '../../../core/auth/keycloak.service';\n\n@Component({\n  selector: 'app-login',\n  template: `\n    <div class=\"login-container\">\n      <mat-card>\n        <mat-card-header>\n          <mat-card-title>Connexion à SentinelRisk</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <button mat-raised-button color=\"primary\" (click)=\"login()\">\n            Se connecter avec Keycloak\n          </button>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  `,\n  styles: [`\n    .login-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n    }\n    mat-card {\n      width: 400px;\n      text-align: center;\n    }\n    button {\n      margin-top: 20px;\n    }\n  `]\n})\nexport class LoginComponent {\n  constructor(private keycloakService: KeycloakService) {}\n\n  login(): void {\n    this.keycloakService.login();\n  }\n} ", "import { Component, OnInit } from '@angular/core';\nimport { KeycloakService } from '../../../core/auth/keycloak.service';\nimport { Observable } from 'rxjs';\nimport { KeycloakProfile } from 'keycloak-js';\n\n@Component({\n  selector: 'app-home',\n  template: `\n    <div class=\"home-container\">\n      <mat-card>\n        <mat-card-header>\n          <mat-card-title>Bienvenue sur SentinelRisk</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <p *ngIf=\"userProfile$ | async as profile\">\n            Bonjour {{ profile.firstName }} {{ profile.lastName }} !\n          </p>\n          <p>Vous êtes connecté avec succès.</p>\n          <button mat-raised-button color=\"warn\" (click)=\"logout()\">\n            Se déconnecter\n          </button>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  `,\n  styles: [`\n    .home-container {\n      padding: 20px;\n    }\n    mat-card {\n      max-width: 600px;\n      margin: 0 auto;\n    }\n    button {\n      margin-top: 20px;\n    }\n  `]\n})\nexport class HomeComponent implements OnInit {\n  userProfile$: Observable<KeycloakProfile>;\n\n  constructor(private keycloakService: KeycloakService) {\n    this.userProfile$ = this.keycloakService.getUserProfile();\n  }\n\n  ngOnInit(): void {}\n\n  logout(): void {\n    this.keycloakService.logout();\n  }\n} ", "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { KeycloakService } from '../../../core/auth/keycloak.service';\n\n@Component({\n  selector: 'app-logout',\n  template: `\n    <div class=\"logout-container\">\n      <div class=\"logout-message\">\n        <h2>Déconnexion en cours...</h2>\n        <p>Vous serez redirigé dans un instant.</p>\n        <mat-progress-spinner mode=\"indeterminate\" diameter=\"40\"></mat-progress-spinner>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .logout-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n    }\n    .logout-message {\n      text-align: center;\n    }\n    h2 {\n      margin-bottom: 16px;\n    }\n    mat-progress-spinner {\n      margin: 24px auto 0;\n    }\n  `]\n})\nexport class LogoutComponent implements OnInit {\n  constructor(\n    private keycloakService: KeycloakService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.logout();\n  }\n\n  private async logout(): Promise<void> {\n    try {\n      await this.keycloakService.logout();\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion:', error);\n      this.router.navigate(['/auth/login']);\n    }\n  }\n} ", "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AuthGuard } from '../../core/guards/auth.guard';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: '', redirectTo: 'login', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    HomeComponent,\n    LogoutComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatCardModule,\n    MatButtonModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [RouterModule]\n})\nexport class AuthModule { } "],
  "mappings": "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",
  "names": []
}
