{"version":3,"sources":["node_modules/@angular/material/fesm2022/radio.mjs","node_modules/@angular/material/fesm2022/autocomplete.mjs","src/app/core/guards/admin.guard.ts","src/app/features/compliance/compliance.component.ts","src/app/features/compliance/compliance.component.html","src/app/features/compliance/frameworks/framework-form-dialog/framework-form-dialog.component.ts","src/app/features/compliance/frameworks/framework-form-dialog/framework-form-dialog.component.html","src/app/features/compliance/services/compliance-framework.service.ts","src/app/features/compliance/frameworks/frameworks.component.ts","src/app/features/compliance/frameworks/frameworks.component.html","src/app/core/models/compliance.model.ts","src/app/features/compliance/requirements/requirement-form-dialog/requirement-form-dialog.component.ts","src/app/features/compliance/requirements/requirement-form-dialog/requirement-form-dialog.component.html","src/app/features/compliance/services/compliance-requirement.service.ts","src/app/features/compliance/frameworks/framework-detail/framework-detail.component.ts","src/app/features/compliance/frameworks/framework-detail/framework-detail.component.html","src/app/features/compliance/frameworks/framework-edit/framework-edit.component.ts","src/app/features/compliance/frameworks/framework-edit/framework-edit.component.html","src/app/features/compliance/requirements/requirements/requirements.component.ts","src/app/features/compliance/requirements/requirements/requirements.component.html","src/app/core/services/risk.service.ts","src/app/features/compliance/mappings/mapping-form-dialog/mapping-form-dialog.component.ts","src/app/features/compliance/mappings/mapping-form-dialog/mapping-form-dialog.component.html","src/app/features/compliance/mappings/mappings/mappings.component.ts","src/app/features/compliance/mappings/mappings/mappings.component.html","src/app/features/compliance/gap-analysis/gap-analysis/gap-analysis.component.ts","src/app/features/compliance/gap-analysis/gap-analysis/gap-analysis.component.html","src/app/features/compliance/compliance.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, InjectionToken, EventEmitter, booleanAttribute, Directive, Output, ContentChildren, Input, numberAttribute, ANIMATION_MODULE_TYPE, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { MatRipple, _MatInternalFormField, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n// Increasing integer for generating unique ids for radio components.\nconst _c0 = [\"input\"];\nconst _c1 = [\"formField\"];\nconst _c2 = [\"*\"];\nlet nextUniqueId = 0;\n/** Change event object emitted by radio button and radio group. */\nclass MatRadioChange {\n  constructor(/** The radio button that emits the change event. */\n  source, /** The value of the radio button. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatRadioGroup),\n  multi: true\n};\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n  providedIn: 'root',\n  factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent'\n  };\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n  /** Name of the radio button group. All radio buttons inside this group will use this name. */\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n    this._updateRadioButtonNames();\n  }\n  /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n  get labelPosition() {\n    return this._labelPosition;\n  }\n  set labelPosition(v) {\n    this._labelPosition = v === 'before' ? 'before' : 'after';\n    this._markRadiosForCheck();\n  }\n  /**\n   * Value for the radio-group. Should equal the value of the selected radio button if there is\n   * a corresponding radio button with a matching value. If there is not such a corresponding\n   * radio button, this value persists to be applied in case a new radio button is added with a\n   * matching value.\n   */\n  get value() {\n    return this._value;\n  }\n  set value(newValue) {\n    if (this._value !== newValue) {\n      // Set this before proceeding to ensure no circular loop occurs with selection.\n      this._value = newValue;\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n    }\n  }\n  _checkSelectedRadioButton() {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n  /**\n   * The currently selected radio button. If set to a new radio button, the radio group value\n   * will be updated to match the new selected button.\n   */\n  get selected() {\n    return this._selected;\n  }\n  set selected(selected) {\n    this._selected = selected;\n    this.value = selected ? selected.value : null;\n    this._checkSelectedRadioButton();\n  }\n  /** Whether the radio group is disabled */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._markRadiosForCheck();\n  }\n  /** Whether the radio group is required */\n  get required() {\n    return this._required;\n  }\n  set required(value) {\n    this._required = value;\n    this._markRadiosForCheck();\n  }\n  constructor(_changeDetector) {\n    this._changeDetector = _changeDetector;\n    /** Selected value for the radio group. */\n    this._value = null;\n    /** The HTML name attribute applied to radio buttons in this group. */\n    this._name = `mat-radio-group-${nextUniqueId++}`;\n    /** The currently selected radio button. Should match value. */\n    this._selected = null;\n    /** Whether the `value` has been set to its initial value. */\n    this._isInitialized = false;\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    this._labelPosition = 'after';\n    /** Whether the radio group is disabled. */\n    this._disabled = false;\n    /** Whether the radio group is required. */\n    this._required = false;\n    /** The method to be called in order to update ngModel */\n    this._controlValueAccessorChangeFn = () => {};\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    this.onTouched = () => {};\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    this.change = new EventEmitter();\n  }\n  /**\n   * Initialize properties once content children are available.\n   * This allows us to propagate relevant attributes to associated buttons.\n   */\n  ngAfterContentInit() {\n    // Mark this component as initialized in AfterContentInit because the initial value can\n    // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n    // NgModel occurs *after* the OnInit of the MatRadioGroup.\n    this._isInitialized = true;\n    // Clear the `selected` button when it's destroyed since the tabindex of the rest of the\n    // buttons depends on it. Note that we don't clear the `value`, because the radio button\n    // may be swapped out with a similar one and there are some internal apps that depend on\n    // that behavior.\n    this._buttonChanges = this._radios.changes.subscribe(() => {\n      if (this.selected && !this._radios.find(radio => radio === this.selected)) {\n        this._selected = null;\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._buttonChanges?.unsubscribe();\n  }\n  /**\n   * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n   * radio buttons upon their blur.\n   */\n  _touch() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n  _updateRadioButtonNames() {\n    if (this._radios) {\n      this._radios.forEach(radio => {\n        radio.name = this.name;\n        radio._markForCheck();\n      });\n    }\n  }\n  /** Updates the `selected` radio button from the internal _value state. */\n  _updateSelectedRadioFromValue() {\n    // If the value already matches the selected radio, do nothing.\n    const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n    if (this._radios && !isAlreadySelected) {\n      this._selected = null;\n      this._radios.forEach(radio => {\n        radio.checked = this.value === radio.value;\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n  /** Dispatch change event with current selection and group value. */\n  _emitChangeEvent() {\n    if (this._isInitialized) {\n      this.change.emit(new MatRadioChange(this._selected, this._value));\n    }\n  }\n  _markRadiosForCheck() {\n    if (this._radios) {\n      this._radios.forEach(radio => radio._markForCheck());\n    }\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n  /**\n   * Registers a callback to be triggered when the model value changes.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be triggered when the control is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n   * @param isDisabled Whether the control should be disabled.\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._changeDetector.markForCheck();\n  }\n  static {\n    this.ɵfac = function MatRadioGroup_Factory(t) {\n      return new (t || MatRadioGroup)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatRadioGroup,\n      selectors: [[\"mat-radio-group\"]],\n      contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatRadioButton, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._radios = _t);\n        }\n      },\n      hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-mdc-radio-group\"],\n      inputs: {\n        color: \"color\",\n        name: \"name\",\n        labelPosition: \"labelPosition\",\n        value: \"value\",\n        selected: \"selected\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\"\n      },\n      exportAs: [\"matRadioGroup\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, {\n        provide: MAT_RADIO_GROUP,\n        useExisting: MatRadioGroup\n      }]), i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRadioGroup, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-radio-group',\n      exportAs: 'matRadioGroup',\n      providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, {\n        provide: MAT_RADIO_GROUP,\n        useExisting: MatRadioGroup\n      }],\n      host: {\n        'role': 'radiogroup',\n        'class': 'mat-mdc-radio-group'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }], {\n    change: [{\n      type: Output\n    }],\n    _radios: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatRadioButton), {\n        descendants: true\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatRadioButton {\n  /** Whether this radio button is checked. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (this._checked !== value) {\n      this._checked = value;\n      if (value && this.radioGroup && this.radioGroup.value !== this.value) {\n        this.radioGroup.selected = this;\n      } else if (!value && this.radioGroup && this.radioGroup.value === this.value) {\n        // When unchecking the selected radio button, update the selected radio\n        // property on the group.\n        this.radioGroup.selected = null;\n      }\n      if (value) {\n        // Notify all radio buttons with the same name to un-check.\n        this._radioDispatcher.notify(this.id, this.name);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n  /** The value of this radio button. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    if (this._value !== value) {\n      this._value = value;\n      if (this.radioGroup !== null) {\n        if (!this.checked) {\n          // Update checked when the value changed to match the radio group's value\n          this.checked = this.radioGroup.value === value;\n        }\n        if (this.checked) {\n          this.radioGroup.selected = this;\n        }\n      }\n    }\n  }\n  /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n  get labelPosition() {\n    return this._labelPosition || this.radioGroup && this.radioGroup.labelPosition || 'after';\n  }\n  set labelPosition(value) {\n    this._labelPosition = value;\n  }\n  /** Whether the radio button is disabled. */\n  get disabled() {\n    return this._disabled || this.radioGroup !== null && this.radioGroup.disabled;\n  }\n  set disabled(value) {\n    this._setDisabled(value);\n  }\n  /** Whether the radio button is required. */\n  get required() {\n    return this._required || this.radioGroup && this.radioGroup.required;\n  }\n  set required(value) {\n    this._required = value;\n  }\n  /** Theme color of the radio button. */\n  get color() {\n    // As per Material design specifications the selection control radio should use the accent color\n    // palette by default. https://material.io/guidelines/components/selection-controls.html\n    return this._color || this.radioGroup && this.radioGroup.color || this._providerOverride && this._providerOverride.color || 'accent';\n  }\n  set color(newValue) {\n    this._color = newValue;\n  }\n  /** ID of the native input element inside `<mat-radio-button>` */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  constructor(radioGroup, _elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n    this._elementRef = _elementRef;\n    this._changeDetector = _changeDetector;\n    this._focusMonitor = _focusMonitor;\n    this._radioDispatcher = _radioDispatcher;\n    this._providerOverride = _providerOverride;\n    this._uniqueId = `mat-radio-${++nextUniqueId}`;\n    /** The unique ID for the radio button. */\n    this.id = this._uniqueId;\n    /** Whether ripples are disabled inside the radio button */\n    this.disableRipple = false;\n    /** Tabindex of the radio button. */\n    this.tabIndex = 0;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    this.change = new EventEmitter();\n    /** Whether this radio is checked. */\n    this._checked = false;\n    /** Value assigned to this radio. */\n    this._value = null;\n    /** Unregister function for _radioDispatcher */\n    this._removeUniqueSelectionListener = () => {};\n    // Assertions. Ideally these should be stripped out by the compiler.\n    // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n    this.radioGroup = radioGroup;\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    if (tabIndex) {\n      this.tabIndex = numberAttribute(tabIndex, 0);\n    }\n  }\n  /** Focuses the radio button. */\n  focus(options, origin) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._inputElement, origin, options);\n    } else {\n      this._inputElement.nativeElement.focus(options);\n    }\n  }\n  /**\n   * Marks the radio button as needing checking for change detection.\n   * This method is exposed because the parent radio group will directly\n   * update bound properties of the radio button.\n   */\n  _markForCheck() {\n    // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n    // update radio button's status\n    this._changeDetector.markForCheck();\n  }\n  ngOnInit() {\n    if (this.radioGroup) {\n      // If the radio is inside a radio group, determine if it should be checked\n      this.checked = this.radioGroup.value === this._value;\n      if (this.checked) {\n        this.radioGroup.selected = this;\n      }\n      // Copy name from parent radio group\n      this.name = this.radioGroup.name;\n    }\n    this._removeUniqueSelectionListener = this._radioDispatcher.listen((id, name) => {\n      if (id !== this.id && name === this.name) {\n        this.checked = false;\n      }\n    });\n  }\n  ngDoCheck() {\n    this._updateTabIndex();\n  }\n  ngAfterViewInit() {\n    this._updateTabIndex();\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin && this.radioGroup) {\n        this.radioGroup._touch();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._removeUniqueSelectionListener();\n  }\n  /** Dispatch change event with current value. */\n  _emitChangeEvent() {\n    this.change.emit(new MatRadioChange(this, this._value));\n  }\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n  _onInputClick(event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `radio-button` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n  /** Triggered when the radio button receives an interaction from the user. */\n  _onInputInteraction(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n    if (!this.checked && !this.disabled) {\n      const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n      this.checked = true;\n      this._emitChangeEvent();\n      if (this.radioGroup) {\n        this.radioGroup._controlValueAccessorChangeFn(this.value);\n        if (groupValueChanged) {\n          this.radioGroup._emitChangeEvent();\n        }\n      }\n    }\n  }\n  /** Triggered when the user clicks on the touch target. */\n  _onTouchTargetClick(event) {\n    this._onInputInteraction(event);\n    if (!this.disabled) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this._inputElement.nativeElement.focus();\n    }\n  }\n  /** Sets the disabled state and marks for check if a change occurred. */\n  _setDisabled(value) {\n    if (this._disabled !== value) {\n      this._disabled = value;\n      this._changeDetector.markForCheck();\n    }\n  }\n  /** Gets the tabindex for the underlying input element. */\n  _updateTabIndex() {\n    const group = this.radioGroup;\n    let value;\n    // Implement a roving tabindex if the button is inside a group. For most cases this isn't\n    // necessary, because the browser handles the tab order for inputs inside a group automatically,\n    // but we need an explicitly higher tabindex for the selected button in order for things like\n    // the focus trap to pick it up correctly.\n    if (!group || !group.selected || this.disabled) {\n      value = this.tabIndex;\n    } else {\n      value = group.selected === this ? this.tabIndex : -1;\n    }\n    if (value !== this._previousTabIndex) {\n      // We have to set the tabindex directly on the DOM node, because it depends on\n      // the selected state which is prone to \"changed after checked errors\".\n      const input = this._inputElement?.nativeElement;\n      if (input) {\n        input.setAttribute('tabindex', value + '');\n        this._previousTabIndex = value;\n      }\n    }\n  }\n  static {\n    this.ɵfac = function MatRadioButton_Factory(t) {\n      return new (t || MatRadioButton)(i0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i2.UniqueSelectionDispatcher), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatRadioButton,\n      selectors: [[\"mat-radio-button\"]],\n      viewQuery: function MatRadioButton_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._rippleTrigger = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-radio-button\"],\n      hostVars: 15,\n      hostBindings: function MatRadioButton_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() {\n            return ctx._inputElement.nativeElement.focus();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n          i0.ɵɵclassProp(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-mdc-radio-checked\", ctx.checked)(\"_mat-animation-noopable\", ctx._noopAnimations);\n        }\n      },\n      inputs: {\n        id: \"id\",\n        name: \"name\",\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"ariaDescribedby\"],\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        checked: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"checked\", \"checked\", booleanAttribute],\n        value: \"value\",\n        labelPosition: \"labelPosition\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n        color: \"color\"\n      },\n      outputs: {\n        change: \"change\"\n      },\n      exportAs: [\"matRadioButton\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 13,\n      vars: 16,\n      consts: [[\"formField\", \"\"], [\"input\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [1, \"mdc-radio\"], [1, \"mat-mdc-radio-touch-target\", 3, \"click\"], [\"type\", \"radio\", 1, \"mdc-radio__native-control\", 3, \"change\", \"id\", \"checked\", \"disabled\", \"required\"], [1, \"mdc-radio__background\"], [1, \"mdc-radio__outer-circle\"], [1, \"mdc-radio__inner-circle\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mdc-label\", 3, \"for\"]],\n      template: function MatRadioButton_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 2, 0)(2, \"div\", 3)(3, \"div\", 4);\n          i0.ɵɵlistener(\"click\", function MatRadioButton_Template_div_click_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onTouchTargetClick($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 5, 1);\n          i0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_4_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onInputInteraction($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 6);\n          i0.ɵɵelement(7, \"div\", 7)(8, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9);\n          i0.ɵɵelement(10, \"div\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"label\", 11);\n          i0.ɵɵprojection(12);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"mdc-radio--disabled\", ctx.disabled);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n          i0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx._rippleTrigger.nativeElement)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"for\", ctx.inputId);\n        }\n      },\n      dependencies: [MatRipple, _MatInternalFormField],\n      styles: [\".mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);right:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);left:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRadioButton, [{\n    type: Component,\n    args: [{\n      selector: 'mat-radio-button',\n      host: {\n        'class': 'mat-mdc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mat-primary]': 'color === \"primary\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class.mat-mdc-radio-checked]': 'checked',\n        '[class._mat-animation-noopable]': '_noopAnimations',\n        // Needs to be removed since it causes some a11y issues (see #21266).\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null',\n        // Note: under normal conditions focus shouldn't land on this element, however it may be\n        // programmatically set, for example inside of a focus trap, in this case we want to forward\n        // the focus to the native element.\n        '(focus)': '_inputElement.nativeElement.focus()'\n      },\n      exportAs: 'matRadioButton',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" #formField>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-radio-touch-target\\\" (click)=\\\"_onTouchTargetClick($event)\\\"></div>\\n    <input #input class=\\\"mdc-radio__native-control\\\" type=\\\"radio\\\"\\n           [id]=\\\"inputId\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [required]=\\\"required\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInputInteraction($event)\\\">\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-mdc-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"_rippleTrigger.nativeElement\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\">\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n  <label class=\\\"mdc-label\\\" [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color}.mdc-radio[hidden]{display:none}.mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1}.mdc-radio--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-radio--touch .mdc-radio__native-control{top:calc((40px - 48px) / 2);right:calc((40px - 48px) / 2);left:calc((40px - 48px) / 2);width:48px;height:48px}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring{border-color:CanvasText}}.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__focus-ring::after,.mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__focus-ring::after{border-color:CanvasText}}.mdc-radio__native-control:checked+.mdc-radio__background,.mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio--disabled{cursor:default;pointer-events:none}.mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1),border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-radio__native-control:disabled+.mdc-radio__background,[aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background{cursor:default}.mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{padding:calc((var(--mdc-radio-state-layer-size) - 20px) / 2)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-disabled-selected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:checked+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio [aria-disabled=true] .mdc-radio__native-control:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio.mdc-ripple-upgraded--background-focused .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio:not(.mdc-ripple-upgraded):focus .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-focus-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color)}.mat-mdc-radio-button .mdc-radio:not(:disabled):active .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);left:calc(-1 * (var(--mdc-radio-state-layer-size) - 20px) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);right:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);left:calc((var(--mdc-radio-state-layer-size) - var(--mdc-radio-state-layer-size)) / 2);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color)}.mat-mdc-radio-button .mdc-radio:hover .mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element{background-color:var(--mat-radio-checked-ripple-color)}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color)}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple .mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, black)}.mat-mdc-radio-button.cdk-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display)}[dir=rtl] .mat-mdc-radio-touch-target{left:0;right:50%;transform:translate(50%, -50%)}\"]\n    }]\n  }], () => [{\n    type: MatRadioGroup,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RADIO_GROUP]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: i2.UniqueSelectionDispatcher\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RADIO_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }], {\n    id: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _inputElement: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    _rippleTrigger: [{\n      type: ViewChild,\n      args: ['formField', {\n        read: ElementRef,\n        static: true\n      }]\n    }]\n  });\n})();\nclass MatRadioModule {\n  static {\n    this.ɵfac = function MatRadioModule_Factory(t) {\n      return new (t || MatRadioModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatRadioModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, CommonModule, MatRippleModule, MatRadioButton, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRadioModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CommonModule, MatRippleModule, MatRadioGroup, MatRadioButton],\n      exports: [MatCommonModule, MatRadioGroup, MatRadioButton]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, ViewChild, ContentChildren, Input, Output, Directive, forwardRef, inject, Optional, Host, NgModule } from '@angular/core';\nimport { MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ActiveDescendantKeyManager, removeAriaReferencedId, addAriaReferencedId } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport { trigger, state, style, transition, group, animate } from '@angular/animations';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { ESCAPE, hasModifierKey, UP_ARROW, ENTER, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { startWith, switchMap, take, filter, map, tap, delay } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/bidi';\n\n// Animation values come from\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-menu-surface/_mixins.scss\n// TODO(mmalerba): Ideally find a way to import the values from MDC's code.\nconst _c0 = [\"panel\"];\nconst _c1 = [\"*\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 0);\n    i0.ɵɵlistener(\"@panelAnimation.done\", function MatAutocomplete_ng_template_0_Template_div_animation_panelAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._animationDone.next($event));\n    });\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formFieldId_r3 = ctx.id;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵclassProp(\"mat-mdc-autocomplete-visible\", ctx_r1.showPanel)(\"mat-mdc-autocomplete-hidden\", !ctx_r1.showPanel)(\"mat-primary\", ctx_r1._color === \"primary\")(\"mat-accent\", ctx_r1._color === \"accent\")(\"mat-warn\", ctx_r1._color === \"warn\");\n    i0.ɵɵproperty(\"id\", ctx_r1.id)(\"@panelAnimation\", ctx_r1.isOpen ? \"visible\" : \"hidden\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby(formFieldId_r3));\n  }\n}\nconst panelAnimation = trigger('panelAnimation', [state('void, hidden', style({\n  opacity: 0,\n  transform: 'scaleY(0.8)'\n})), transition(':enter, hidden => visible', [group([animate('0.03s linear', style({\n  opacity: 1\n})), animate('0.12s cubic-bezier(0, 0, 0.2, 1)', style({\n  transform: 'scaleY(1)'\n}))])]), transition(':leave, visible => hidden', [animate('0.075s linear', style({\n  opacity: 0\n}))])]);\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n  constructor(/** Reference to the autocomplete panel that emitted the event. */\n  source, /** Option that was selected. */\n  option) {\n    this.source = source;\n    this.option = option;\n  }\n}\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n  providedIn: 'root',\n  factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    autoActiveFirstOption: false,\n    autoSelectActiveOption: false,\n    hideSingleSelectionIndicator: false,\n    requireSelection: false\n  };\n}\n/** Autocomplete component. */\nclass MatAutocomplete {\n  /** Whether the autocomplete panel is open. */\n  get isOpen() {\n    return this._isOpen && this.showPanel;\n  }\n  /** @docs-private Sets the theme color of the panel. */\n  _setColor(value) {\n    this._color = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Takes classes set on the host mat-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  set classList(value) {\n    this._classList = value;\n    this._elementRef.nativeElement.className = '';\n  }\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncParentProperties();\n  }\n  /** Syncs the parent state with the individual options. */\n  _syncParentProperties() {\n    if (this.options) {\n      for (const option of this.options) {\n        option._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  constructor(_changeDetectorRef, _elementRef, _defaults, platform) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._defaults = _defaults;\n    this._activeOptionChanges = Subscription.EMPTY;\n    /** Emits when the panel animation is done. Null if the panel doesn't animate. */\n    this._animationDone = new EventEmitter();\n    /** Whether the autocomplete panel should be visible, depending on option length. */\n    this.showPanel = false;\n    this._isOpen = false;\n    /** Function that maps an option's control value to its display value in the trigger. */\n    this.displayWith = null;\n    /** Event that is emitted whenever an option from the list is selected. */\n    this.optionSelected = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is opened. */\n    this.opened = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is closed. */\n    this.closed = new EventEmitter();\n    /** Emits whenever an option is activated. */\n    this.optionActivated = new EventEmitter();\n    /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n    this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n    // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n    // Safari using VoiceOver. We should occasionally check back to see whether the bug\n    // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n    // option altogether.\n    this.inertGroups = platform?.SAFARI || false;\n    this.autoActiveFirstOption = !!_defaults.autoActiveFirstOption;\n    this.autoSelectActiveOption = !!_defaults.autoSelectActiveOption;\n    this.requireSelection = !!_defaults.requireSelection;\n    this._hideSingleSelectionIndicator = this._defaults.hideSingleSelectionIndicator ?? false;\n  }\n  ngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap().skipPredicate(this._skipPredicate);\n    this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n      if (this.isOpen) {\n        this.optionActivated.emit({\n          source: this,\n          option: this.options.toArray()[index] || null\n        });\n      }\n    });\n    // Set the initial visibility state.\n    this._setVisibility();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._activeOptionChanges.unsubscribe();\n    this._animationDone.complete();\n  }\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop) {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n  /** Returns the panel's scrollTop. */\n  _getScrollTop() {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!this.options.length;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits the `select` event. */\n  _emitSelectEvent(option) {\n    const event = new MatAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n  /** Gets the aria-labelledby for the autocomplete panel. */\n  _getPanelAriaLabelledby(labelId) {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelExpression = labelId ? labelId + ' ' : '';\n    return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n  }\n  // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n  // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n  // recommendation.\n  //\n  // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n  // makes a few exceptions for compound widgets.\n  //\n  // From [Developing a Keyboard Interface](\n  // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n  //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n  //   Listbox...\"\n  //\n  // The user can focus disabled options using the keyboard, but the user cannot click disabled\n  // options.\n  _skipPredicate() {\n    return false;\n  }\n  static {\n    this.ɵfac = function MatAutocomplete_Factory(t) {\n      return new (t || MatAutocomplete)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i1.Platform));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatAutocomplete,\n      selectors: [[\"mat-autocomplete\"]],\n      contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        }\n      },\n      viewQuery: function MatAutocomplete_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 7);\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-autocomplete\"],\n      inputs: {\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        displayWith: \"displayWith\",\n        autoActiveFirstOption: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"autoActiveFirstOption\", \"autoActiveFirstOption\", booleanAttribute],\n        autoSelectActiveOption: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"autoSelectActiveOption\", \"autoSelectActiveOption\", booleanAttribute],\n        requireSelection: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"requireSelection\", \"requireSelection\", booleanAttribute],\n        panelWidth: \"panelWidth\",\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        classList: [i0.ɵɵInputFlags.None, \"class\", \"classList\"],\n        hideSingleSelectionIndicator: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute]\n      },\n      outputs: {\n        optionSelected: \"optionSelected\",\n        opened: \"opened\",\n        closed: \"closed\",\n        optionActivated: \"optionActivated\"\n      },\n      exportAs: [\"matAutocomplete\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatAutocomplete\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 1,\n      vars: 0,\n      consts: [[\"panel\", \"\"], [\"role\", \"listbox\", 1, \"mat-mdc-autocomplete-panel\", \"mdc-menu-surface\", \"mdc-menu-surface--open\", 3, \"id\"]],\n      template: function MatAutocomplete_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 16, \"ng-template\");\n        }\n      },\n      styles: [\"div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:static;border-radius:var(--mat-autocomplete-container-shape);box-shadow:var(--mat-autocomplete-container-elevation-shadow);background-color:var(--mat-autocomplete-background-color)}.cdk-high-contrast-active div.mat-mdc-autocomplete-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}mat-autocomplete{display:none}\"],\n      encapsulation: 2,\n      data: {\n        animation: [panelAnimation]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocomplete, [{\n    type: Component,\n    args: [{\n      selector: 'mat-autocomplete',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'matAutocomplete',\n      host: {\n        'class': 'mat-mdc-autocomplete'\n      },\n      providers: [{\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatAutocomplete\n      }],\n      animations: [panelAnimation],\n      standalone: true,\n      template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div\\n    class=\\\"mat-mdc-autocomplete-panel mdc-menu-surface mdc-menu-surface--open\\\"\\n    role=\\\"listbox\\\"\\n    [id]=\\\"id\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-mdc-autocomplete-visible]=\\\"showPanel\\\"\\n    [class.mat-mdc-autocomplete-hidden]=\\\"!showPanel\\\"\\n    [class.mat-primary]=\\\"_color === 'primary'\\\"\\n    [class.mat-accent]=\\\"_color === 'accent'\\\"\\n    [class.mat-warn]=\\\"_color === 'warn'\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n    [@panelAnimation]=\\\"isOpen ? 'visible' : 'hidden'\\\"\\n    (@panelAnimation.done)=\\\"_animationDone.next($event)\\\"\\n    #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:static;border-radius:var(--mat-autocomplete-container-shape);box-shadow:var(--mat-autocomplete-container-elevation-shadow);background-color:var(--mat-autocomplete-background-color)}.cdk-high-contrast-active div.mat-mdc-autocomplete-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}mat-autocomplete{display:none}\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: i1.Platform\n  }], {\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel']\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [MatOption, {\n        descendants: true\n      }]\n    }],\n    optionGroups: [{\n      type: ContentChildren,\n      args: [MAT_OPTGROUP, {\n        descendants: true\n      }]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    autoActiveFirstOption: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    autoSelectActiveOption: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    requireSelection: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    panelWidth: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    optionSelected: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    optionActivated: [{\n      type: Output\n    }],\n    classList: [{\n      type: Input,\n      args: ['class']\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n  constructor(/** Reference to the element on which the directive is applied. */\n  elementRef) {\n    this.elementRef = elementRef;\n  }\n  static {\n    this.ɵfac = function MatAutocompleteOrigin_Factory(t) {\n      return new (t || MatAutocompleteOrigin)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatAutocompleteOrigin,\n      selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]],\n      exportAs: [\"matAutocompleteOrigin\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n    type: Directive,\n    args: [{\n      selector: '[matAutocompleteOrigin]',\n      exportAs: 'matAutocompleteOrigin',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], null);\n})();\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n  return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' + 'Make sure that the id passed to the `matAutocomplete` is correct and that ' + \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY\n};\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass MatAutocompleteTrigger {\n  constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n    this._element = _element;\n    this._overlay = _overlay;\n    this._viewContainerRef = _viewContainerRef;\n    this._zone = _zone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._formField = _formField;\n    this._document = _document;\n    this._viewportRuler = _viewportRuler;\n    this._defaults = _defaults;\n    this._componentDestroyed = false;\n    /** Whether or not the label state is being overridden. */\n    this._manuallyFloatingLabel = false;\n    /** Subscription to viewport size changes. */\n    this._viewportSubscription = Subscription.EMPTY;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     */\n    this._canOpenOnNextFocus = true;\n    /** Stream of keyboard events that can close the panel. */\n    this._closeKeyEventStream = new Subject();\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     */\n    this._windowBlurHandler = () => {\n      // If the user blurred the window while the autocomplete is focused, it means that it'll be\n      // refocused when they come back. In this case we want to skip the first focus event, if the\n      // pane was closed, in order to avoid reopening it unintentionally.\n      this._canOpenOnNextFocus = this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n    };\n    /** `View -> model callback called when value changes` */\n    this._onChange = () => {};\n    /** `View -> model callback called when autocomplete has been touched` */\n    this._onTouched = () => {};\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     */\n    this.position = 'auto';\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * @docs-private\n     */\n    this.autocompleteAttribute = 'off';\n    /** Class to apply to the panel when it's above the input. */\n    this._aboveClass = 'mat-mdc-autocomplete-panel-above';\n    this._overlayAttached = false;\n    /** Stream of changes to the selection state of the autocomplete options. */\n    this.optionSelections = defer(() => {\n      const options = this.autocomplete ? this.autocomplete.options : null;\n      if (options) {\n        return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n      }\n      // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n      // Return a stream that we'll replace with the real one once everything is in place.\n      return this._zone.onStable.pipe(take(1), switchMap(() => this.optionSelections));\n    });\n    /** Handles keyboard events coming from the overlay panel. */\n    this._handlePanelKeydown = event => {\n      // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n      // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n      if (event.keyCode === ESCAPE && !hasModifierKey(event) || event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey')) {\n        // If the user had typed something in before we autoselected an option, and they decided\n        // to cancel the selection, restore the input value to the one they had typed in.\n        if (this._pendingAutoselectedOption) {\n          this._updateNativeInputValue(this._valueBeforeAutoSelection ?? '');\n          this._pendingAutoselectedOption = null;\n        }\n        this._closeKeyEventStream.next();\n        this._resetActiveItem();\n        // We need to stop propagation, otherwise the event will eventually\n        // reach the input itself and cause the overlay to be reopened.\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\n     * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n     * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n     * panel. Track the modal we have changed so we can undo the changes on destroy.\n     */\n    this._trackedModal = null;\n    this._scrollStrategy = scrollStrategy;\n  }\n  ngAfterViewInit() {\n    const window = this._getWindow();\n    if (typeof window !== 'undefined') {\n      this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes['position'] && this._positionStrategy) {\n      this._setStrategyPositions(this._positionStrategy);\n      if (this.panelOpen) {\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n  ngOnDestroy() {\n    const window = this._getWindow();\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('blur', this._windowBlurHandler);\n    }\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n    this._clearFromModal();\n  }\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen() {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  /** Opens the autocomplete suggestion panel. */\n  openPanel() {\n    this._openPanelInternal();\n  }\n  /** Closes the autocomplete suggestion panel. */\n  closePanel() {\n    this._resetLabel();\n    if (!this._overlayAttached) {\n      return;\n    }\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      // The `NgZone.onStable` always emits outside of the Angular zone,\n      // so all the subscriptions from `_subscribeToClosingActions()` are also outside of the Angular zone.\n      // We should manually run in Angular zone to update UI after panel closing.\n      this._zone.run(() => {\n        this.autocomplete.closed.emit();\n      });\n    }\n    // Only reset if this trigger is the latest one that opened the\n    // autocomplete since another may have taken it over.\n    if (this.autocomplete._latestOpeningTrigger === this) {\n      this.autocomplete._isOpen = false;\n      this.autocomplete._latestOpeningTrigger = null;\n    }\n    this._overlayAttached = false;\n    this._pendingAutoselectedOption = null;\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n    this._updatePanelState();\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n    // Remove aria-owns attribute when the autocomplete is no longer visible.\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', this.autocomplete.id);\n    }\n  }\n  /**\n   * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n   * within the viewport.\n   */\n  updatePosition() {\n    if (this._overlayAttached) {\n      this._overlayRef.updatePosition();\n    }\n  }\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions() {\n    return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) : of()).pipe(\n    // Normalize the output so we return a consistent type.\n    map(event => event instanceof MatOptionSelectionChange ? event : null));\n  }\n  /** The currently active option, coerced to MatOption type. */\n  get activeOption() {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n    return null;\n  }\n  /** Stream of clicks outside of the autocomplete panel. */\n  _getOutsideClickStream() {\n    return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n      // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n      // fall back to check the first element in the path of the click event.\n      const clickTarget = _getEventTarget(event);\n      const formField = this._formField ? this._formField.getConnectedOverlayOrigin().nativeElement : null;\n      const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n      return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n      // Normally focus moves inside `mousedown` so this condition will almost always be\n      // true. Its main purpose is to handle the case where the input is focused from an\n      // outside click which propagates up to the `body` listener within the same sequence\n      // and causes the panel to close immediately (see #3106).\n      this._document.activeElement !== this._element.nativeElement && (!formField || !formField.contains(clickTarget)) && (!customOrigin || !customOrigin.contains(clickTarget)) && !!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget);\n    }));\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    Promise.resolve(null).then(() => this._assignOptionValue(value));\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const hasModifier = hasModifierKey(event);\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE && !hasModifier) {\n      event.preventDefault();\n    }\n    this._valueOnLastKeydown = this._element.nativeElement.value;\n    if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifier) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else if (this.autocomplete) {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n      if (keyCode === TAB || isArrowKey && !hasModifier && this.panelOpen) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._canOpen()) {\n        this._openPanelInternal(this._valueOnLastKeydown);\n      }\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n        if (this.autocomplete.autoSelectActiveOption && this.activeOption) {\n          if (!this._pendingAutoselectedOption) {\n            this._valueBeforeAutoSelection = this._valueOnLastKeydown;\n          }\n          this._pendingAutoselectedOption = this.activeOption;\n          this._assignOptionValue(this.activeOption.value);\n        }\n      }\n    }\n  }\n  _handleInput(event) {\n    let target = event.target;\n    let value = target.value;\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value == '' ? null : parseFloat(value);\n    }\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._previousValue !== value) {\n      this._previousValue = value;\n      this._pendingAutoselectedOption = null;\n      // If selection is required we don't write to the CVA while the user is typing.\n      // At the end of the selection either the user will have picked something\n      // or we'll reset the value back to null.\n      if (!this.autocomplete || !this.autocomplete.requireSelection) {\n        this._onChange(value);\n      }\n      if (!value) {\n        this._clearPreviousSelectedOption(null, false);\n      } else if (this.panelOpen && !this.autocomplete.requireSelection) {\n        // Note that we don't reset this when `requireSelection` is enabled,\n        // because the option will be reset when the panel is closed.\n        const selectedOption = this.autocomplete.options?.find(option => option.selected);\n        if (selectedOption) {\n          const display = this._getDisplayValue(selectedOption.value);\n          if (value !== display) {\n            selectedOption.deselect(false);\n          }\n        }\n      }\n      if (this._canOpen() && this._document.activeElement === event.target) {\n        // When the `input` event fires, the input's value will have already changed. This means\n        // that if we take the `this._element.nativeElement.value` directly, it'll be one keystroke\n        // behind. This can be a problem when the user selects a value, changes a character while\n        // the input still has focus and then clicks away (see #28432). To work around it, we\n        // capture the value in `keydown` so we can use it here.\n        const valueOnAttach = this._valueOnLastKeydown ?? this._element.nativeElement.value;\n        this._valueOnLastKeydown = null;\n        this._openPanelInternal(valueOnAttach);\n      }\n    }\n  }\n  _handleFocus() {\n    if (!this._canOpenOnNextFocus) {\n      this._canOpenOnNextFocus = true;\n    } else if (this._canOpen()) {\n      this._previousValue = this._element.nativeElement.value;\n      this._attachOverlay(this._previousValue);\n      this._floatLabel(true);\n    }\n  }\n  _handleClick() {\n    if (this._canOpen() && !this.panelOpen) {\n      this._openPanelInternal();\n    }\n  }\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  _floatLabel(shouldAnimate = false) {\n    if (this._formField && this._formField.floatLabel === 'auto') {\n      if (shouldAnimate) {\n        this._formField._animateAndLockLabel();\n      } else {\n        this._formField.floatLabel = 'always';\n      }\n      this._manuallyFloatingLabel = true;\n    }\n  }\n  /** If the label has been manually elevated, return it to its normal state. */\n  _resetLabel() {\n    if (this._manuallyFloatingLabel) {\n      if (this._formField) {\n        this._formField.floatLabel = 'auto';\n      }\n      this._manuallyFloatingLabel = false;\n    }\n  }\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  _subscribeToClosingActions() {\n    const firstStable = this._zone.onStable.pipe(take(1));\n    const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()),\n    // Defer emitting to the stream until the next tick, because changing\n    // bindings in here will cause \"changed after checked\" errors.\n    delay(0));\n    // When the zone is stable initially, and when the option list changes...\n    return merge(firstStable, optionChanges).pipe(\n    // create a new stream of panelClosingActions, replacing any previous streams\n    // that were created, and flatten it so our stream only emits closing events...\n    switchMap(() => {\n      // The `NgZone.onStable` always emits outside of the Angular zone, thus we have to re-enter\n      // the Angular zone. This will lead to change detection being called outside of the Angular\n      // zone and the `autocomplete.opened` will also emit outside of the Angular.\n      this._zone.run(() => {\n        const wasOpen = this.panelOpen;\n        this._resetActiveItem();\n        this._updatePanelState();\n        this._changeDetectorRef.detectChanges();\n        if (this.panelOpen) {\n          this._overlayRef.updatePosition();\n        }\n        if (wasOpen !== this.panelOpen) {\n          // If the `panelOpen` state changed, we need to make sure to emit the `opened` or\n          // `closed` event, because we may not have emitted it. This can happen\n          // - if the users opens the panel and there are no options, but the\n          //   options come in slightly later or as a result of the value changing,\n          // - if the panel is closed after the user entered a string that did not match any\n          //   of the available options,\n          // - if a valid string is entered after an invalid one.\n          if (this.panelOpen) {\n            this._emitOpened();\n          } else {\n            this.autocomplete.closed.emit();\n          }\n        }\n      });\n      return this.panelClosingActions;\n    }),\n    // when the first closing event occurs...\n    take(1))\n    // set the value, close the panel, and complete.\n    .subscribe(event => this._setValueAndClose(event));\n  }\n  /**\n   * Emits the opened event once it's known that the panel will be shown and stores\n   * the state of the trigger right before the opening sequence was finished.\n   */\n  _emitOpened() {\n    this.autocomplete.opened.emit();\n  }\n  /** Destroys the autocomplete suggestion panel. */\n  _destroyPanel() {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n  /** Given a value, returns the string that should be shown within the input. */\n  _getDisplayValue(value) {\n    const autocomplete = this.autocomplete;\n    return autocomplete && autocomplete.displayWith ? autocomplete.displayWith(value) : value;\n  }\n  _assignOptionValue(value) {\n    const toDisplay = this._getDisplayValue(value);\n    if (value == null) {\n      this._clearPreviousSelectedOption(null, false);\n    }\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    this._updateNativeInputValue(toDisplay != null ? toDisplay : '');\n  }\n  _updateNativeInputValue(value) {\n    // If it's used within a `MatFormField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = value;\n    } else {\n      this._element.nativeElement.value = value;\n    }\n    this._previousValue = value;\n  }\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  _setValueAndClose(event) {\n    const panel = this.autocomplete;\n    const toSelect = event ? event.source : this._pendingAutoselectedOption;\n    if (toSelect) {\n      this._clearPreviousSelectedOption(toSelect);\n      this._assignOptionValue(toSelect.value);\n      // TODO(crisbeto): this should wait until the animation is done, otherwise the value\n      // gets reset while the panel is still animating which looks glitchy. It'll likely break\n      // some tests to change it at this point.\n      this._onChange(toSelect.value);\n      panel._emitSelectEvent(toSelect);\n      this._element.nativeElement.focus();\n    } else if (panel.requireSelection && this._element.nativeElement.value !== this._valueOnAttach) {\n      this._clearPreviousSelectedOption(null);\n      this._assignOptionValue(null);\n      // Wait for the animation to finish before clearing the form control value, otherwise\n      // the options might change while the animation is running which looks glitchy.\n      if (panel._animationDone) {\n        panel._animationDone.pipe(take(1)).subscribe(() => this._onChange(null));\n      } else {\n        this._onChange(null);\n      }\n    }\n    this.closePanel();\n  }\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  _clearPreviousSelectedOption(skip, emitEvent) {\n    // Null checks are necessary here, because the autocomplete\n    // or its options may not have been assigned yet.\n    this.autocomplete?.options?.forEach(option => {\n      if (option !== skip && option.selected) {\n        option.deselect(emitEvent);\n      }\n    });\n  }\n  _openPanelInternal(valueOnAttach = this._element.nativeElement.value) {\n    this._attachOverlay(valueOnAttach);\n    this._floatLabel();\n    // Add aria-owns attribute when the autocomplete becomes visible.\n    if (this._trackedModal) {\n      const panelId = this.autocomplete.id;\n      addAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n  }\n  _attachOverlay(valueOnAttach) {\n    if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatAutocompleteMissingPanelError();\n    }\n    let overlayRef = this._overlayRef;\n    if (!overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n        id: this._formField?.getLabelId()\n      });\n      overlayRef = this._overlay.create(this._getOverlayConfig());\n      this._overlayRef = overlayRef;\n      this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n        if (this.panelOpen && overlayRef) {\n          overlayRef.updateSize({\n            width: this._getPanelWidth()\n          });\n        }\n      });\n    } else {\n      // Update the trigger, panel width and direction, in case anything has changed.\n      this._positionStrategy.setOrigin(this._getConnectedElement());\n      overlayRef.updateSize({\n        width: this._getPanelWidth()\n      });\n    }\n    if (overlayRef && !overlayRef.hasAttached()) {\n      overlayRef.attach(this._portal);\n      this._valueOnAttach = valueOnAttach;\n      this._valueOnLastKeydown = null;\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n    const wasOpen = this.panelOpen;\n    this.autocomplete._isOpen = this._overlayAttached = true;\n    this.autocomplete._latestOpeningTrigger = this;\n    this.autocomplete._setColor(this._formField?.color);\n    this._updatePanelState();\n    this._applyModalPanelOwnership();\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this._emitOpened();\n    }\n  }\n  /** Updates the panel's visibility state and any trigger state tied to id. */\n  _updatePanelState() {\n    this.autocomplete._setVisibility();\n    // Note that here we subscribe and unsubscribe based on the panel's visiblity state,\n    // because the act of subscribing will prevent events from reaching other overlays and\n    // we don't want to block the events if there are no options.\n    if (this.panelOpen) {\n      const overlayRef = this._overlayRef;\n      if (!this._keydownSubscription) {\n        // Use the `keydownEvents` in order to take advantage of\n        // the overlay event targeting provided by the CDK overlay.\n        this._keydownSubscription = overlayRef.keydownEvents().subscribe(this._handlePanelKeydown);\n      }\n      if (!this._outsideClickSubscription) {\n        // Subscribe to the pointer events stream so that it doesn't get picked up by other overlays.\n        // TODO(crisbeto): we should switch `_getOutsideClickStream` eventually to use this stream,\n        // but the behvior isn't exactly the same and it ends up breaking some internal tests.\n        this._outsideClickSubscription = overlayRef.outsidePointerEvents().subscribe();\n      }\n    } else {\n      this._keydownSubscription?.unsubscribe();\n      this._outsideClickSubscription?.unsubscribe();\n      this._keydownSubscription = this._outsideClickSubscription = null;\n    }\n  }\n  _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      width: this._getPanelWidth(),\n      direction: this._dir ?? undefined,\n      panelClass: this._defaults?.overlayPanelClass\n    });\n  }\n  _getOverlayPosition() {\n    const strategy = this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(false).withPush(false);\n    this._setStrategyPositions(strategy);\n    this._positionStrategy = strategy;\n    return strategy;\n  }\n  /** Sets the positions on a position strategy based on the directive's input state. */\n  _setStrategyPositions(positionStrategy) {\n    // Note that we provide horizontal fallback positions, even though by default the dropdown\n    // width matches the input, because consumers can override the width. See #18854.\n    const belowPositions = [{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }];\n    // The overlay edge connected to the trigger should have squared corners, while\n    // the opposite end has rounded corners. We apply a CSS class to swap the\n    // border-radius based on the overlay position.\n    const panelClass = this._aboveClass;\n    const abovePositions = [{\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n      panelClass\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom',\n      panelClass\n    }];\n    let positions;\n    if (this.position === 'above') {\n      positions = abovePositions;\n    } else if (this.position === 'below') {\n      positions = belowPositions;\n    } else {\n      positions = [...belowPositions, ...abovePositions];\n    }\n    positionStrategy.withPositions(positions);\n  }\n  _getConnectedElement() {\n    if (this.connectedTo) {\n      return this.connectedTo.elementRef;\n    }\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n  _getPanelWidth() {\n    return this.autocomplete.panelWidth || this._getHostWidth();\n  }\n  /** Returns the width of the input element, so the panel width can match it. */\n  _getHostWidth() {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n  /**\n   * Reset the active item to -1. This is so that pressing arrow keys will activate the correct\n   * option.\n   *\n   * If the consumer opted-in to automatically activatating the first option, activate the first\n   * *enabled* option.\n   */\n  _resetActiveItem() {\n    const autocomplete = this.autocomplete;\n    if (autocomplete.autoActiveFirstOption) {\n      // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n      // because it activates the first option that passes the skip predicate, rather than the\n      // first *enabled* option.\n      let firstEnabledOptionIndex = -1;\n      for (let index = 0; index < autocomplete.options.length; index++) {\n        const option = autocomplete.options.get(index);\n        if (!option.disabled) {\n          firstEnabledOptionIndex = index;\n          break;\n        }\n      }\n      autocomplete._keyManager.setActiveItem(firstEnabledOptionIndex);\n    } else {\n      autocomplete._keyManager.setActiveItem(-1);\n    }\n  }\n  /** Determines whether the panel can be opened. */\n  _canOpen() {\n    const element = this._element.nativeElement;\n    return !element.readOnly && !element.disabled && !this.autocompleteDisabled;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document?.defaultView || window;\n  }\n  /** Scrolls to a particular option in the list. */\n  _scrollToOption(index) {\n    // Given that we are not actually focusing active options, we must manually adjust scroll\n    // to reveal options below the fold. First, we find the offset of the option from the top\n    // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n    // the panel height + the option height, so the active option will be just visible at the\n    // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n    // will become the offset. If that offset is visible within the panel already, the scrollTop is\n    // not adjusted.\n    const autocomplete = this.autocomplete;\n    const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n    if (index === 0 && labelCount === 1) {\n      // If we've got one group label before the option and we're at the top option,\n      // scroll the list to the top. This is better UX than scrolling the list to the\n      // top of the option, because it allows the user to read the top group's label.\n      autocomplete._setScrollTop(0);\n    } else if (autocomplete.panel) {\n      const option = autocomplete.options.toArray()[index];\n      if (option) {\n        const element = option._getHostElement();\n        const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n        autocomplete._setScrollTop(newScrollPosition);\n      }\n    }\n  }\n  /**\n   * If the autocomplete trigger is inside of an `aria-modal` element, connect\n   * that modal to the options panel with `aria-owns`.\n   *\n   * For some browser + screen reader combinations, when navigation is inside\n   * of an `aria-modal` element, the screen reader treats everything outside\n   * of that modal as hidden or invisible.\n   *\n   * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n   * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n   * from reaching the panel.\n   *\n   * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n   * the options panel. This effectively communicates to assistive technology that the\n   * options panel is part of the same interaction as the modal.\n   *\n   * At time of this writing, this issue is present in VoiceOver.\n   * See https://github.com/angular/components/issues/20694\n   */\n  _applyModalPanelOwnership() {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n    // the `LiveAnnouncer` and any other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const modal = this._element.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    if (!modal) {\n      // Most commonly, the autocomplete trigger is not inside a modal.\n      return;\n    }\n    const panelId = this.autocomplete.id;\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n    addAriaReferencedId(modal, 'aria-owns', panelId);\n    this._trackedModal = modal;\n  }\n  /** Clears the references to the listbox overlay element from the modal it was added to. */\n  _clearFromModal() {\n    if (this._trackedModal) {\n      const panelId = this.autocomplete.id;\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      this._trackedModal = null;\n    }\n  }\n  static {\n    this.ɵfac = function MatAutocompleteTrigger_Factory(t) {\n      return new (t || MatAutocompleteTrigger)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i3.ViewportRuler), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatAutocompleteTrigger,\n      selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-autocomplete-trigger\"],\n      hostVars: 7,\n      hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() {\n            return ctx._handleFocus();\n          })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() {\n            return ctx._onTouched();\n          })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) {\n            return ctx._handleInput($event);\n          })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          })(\"click\", function MatAutocompleteTrigger_click_HostBindingHandler() {\n            return ctx._handleClick();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-controls\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", ctx.autocompleteDisabled ? null : \"listbox\");\n        }\n      },\n      inputs: {\n        autocomplete: [i0.ɵɵInputFlags.None, \"matAutocomplete\", \"autocomplete\"],\n        position: [i0.ɵɵInputFlags.None, \"matAutocompletePosition\", \"position\"],\n        connectedTo: [i0.ɵɵInputFlags.None, \"matAutocompleteConnectedTo\", \"connectedTo\"],\n        autocompleteAttribute: [i0.ɵɵInputFlags.None, \"autocomplete\", \"autocompleteAttribute\"],\n        autocompleteDisabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matAutocompleteDisabled\", \"autocompleteDisabled\", booleanAttribute]\n      },\n      exportAs: [\"matAutocompleteTrigger\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n      host: {\n        'class': 'mat-mdc-autocomplete-trigger',\n        '[attr.autocomplete]': 'autocompleteAttribute',\n        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n        '[attr.aria-controls]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n        // a little earlier. This avoids issues where IE delays the focusing of the input.\n        '(focusin)': '_handleFocus()',\n        '(blur)': '_onTouched()',\n        '(input)': '_handleInput($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick()'\n      },\n      exportAs: 'matAutocompleteTrigger',\n      providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1$1.Overlay\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i4.MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD]\n    }, {\n      type: Host\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i3.ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n    }]\n  }], {\n    autocomplete: [{\n      type: Input,\n      args: ['matAutocomplete']\n    }],\n    position: [{\n      type: Input,\n      args: ['matAutocompletePosition']\n    }],\n    connectedTo: [{\n      type: Input,\n      args: ['matAutocompleteConnectedTo']\n    }],\n    autocompleteAttribute: [{\n      type: Input,\n      args: ['autocomplete']\n    }],\n    autocompleteDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'matAutocompleteDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatAutocompleteModule {\n  static {\n    this.ɵfac = function MatAutocompleteModule_Factory(t) {\n      return new (t || MatAutocompleteModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatAutocompleteModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule, CdkScrollableModule, MatOptionModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule, MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n      exports: [CdkScrollableModule, MatAutocomplete, MatOptionModule, MatCommonModule, MatAutocompleteTrigger, MatAutocompleteOrigin],\n      providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { KeycloakService } from '../auth/keycloak.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  \n  constructor(\n    private keycloakService: KeycloakService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    // Vérifier si l'utilisateur est connecté et a le rôle admin\n    if (this.keycloakService.isLoggedIn() && this.keycloakService.hasRole('admin')) {\n      console.log('AdminGuard: Accès autorisé - rôle admin détecté');\n      return true;\n    }\n    \n    console.log('AdminGuard: Accès refusé - rôle admin requis');\n    \n    // Rediriger vers la page principale en cas d'accès non autorisé\n    return this.router.createUrlTree(['/compliance/frameworks']);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-compliance',\n  templateUrl: './compliance.component.html',\n  styleUrls: ['./compliance.component.scss']\n})\nexport class ComplianceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n} ","<div class=\"compliance-container\">\n  <div class=\"page-header\">\n    <h1>Gestion de la Conformité</h1>\n    <p class=\"subtitle\">Gérez les référentiels normatifs et les mappings avec les risques</p>\n  </div>\n\n  <nav mat-tab-nav-bar class=\"compliance-nav\">\n    <a mat-tab-link\n       routerLink=\"frameworks\"\n       routerLinkActive #rlFrameworks=\"routerLinkActive\"\n       [active]=\"rlFrameworks.isActive\">\n       <mat-icon>library_books</mat-icon>\n       Référentiels Normatifs\n    </a>\n    <a mat-tab-link\n       routerLink=\"requirements\"\n       routerLinkActive #rlRequirements=\"routerLinkActive\"\n       [active]=\"rlRequirements.isActive\">\n       <mat-icon>assignment</mat-icon>\n       Exigences\n    </a>\n    <a mat-tab-link\n       routerLink=\"mappings\"\n       routerLinkActive #rlMapping=\"routerLinkActive\"\n       [active]=\"rlMapping.isActive\">\n       <mat-icon>link</mat-icon>\n       Mappings Risques-Conformité\n    </a>\n    <a mat-tab-link\n       routerLink=\"gap-analysis\"\n       routerLinkActive #rlGap=\"routerLinkActive\"\n       [active]=\"rlGap.isActive\">\n       <mat-icon>analytics</mat-icon>\n       Analyse d'Écarts\n    </a>\n  </nav>\n\n  <div class=\"compliance-content\">\n    <router-outlet></router-outlet>\n  </div>\n</div> ","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ComplianceFramework } from '../../../../core/models/compliance.model';\n\n@Component({\n  selector: 'app-framework-form-dialog',\n  templateUrl: './framework-form-dialog.component.html',\n  styleUrls: ['./framework-form-dialog.component.scss']\n})\nexport class FrameworkFormDialogComponent implements OnInit {\n  frameworkForm!: FormGroup;\n  isEditMode: boolean = false;\n  dialogTitle: string = 'Créer un Référentiel Normatif';\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<FrameworkFormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Partial<ComplianceFramework>\n  ) {}\n\n  ngOnInit(): void {\n    this.isEditMode = !!this.data.id;\n    \n    if (this.isEditMode) {\n      this.dialogTitle = 'Modifier le Référentiel Normatif';\n    }\n\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.frameworkForm = this.fb.group({\n      id: [this.data.id],\n      name: [this.data.name || '', [Validators.required, Validators.maxLength(100)]],\n      version: [this.data.version || '', [Validators.required, Validators.maxLength(20)]],\n      description: [this.data.description || '', Validators.maxLength(500)]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.frameworkForm.valid) {\n      this.dialogRef.close(this.frameworkForm.value);\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n} ","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form [formGroup]=\"frameworkForm\" (ngSubmit)=\"onSubmit()\">\n  <mat-dialog-content>\n    <div class=\"form-fields\">\n      <input type=\"hidden\" formControlName=\"id\">\n\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Nom</mat-label>\n        <input matInput formControlName=\"name\" placeholder=\"Ex. ISO 27001\" required>\n        <mat-error *ngIf=\"frameworkForm.get('name')?.hasError('required')\">\n          Le nom est obligatoire\n        </mat-error>\n        <mat-error *ngIf=\"frameworkForm.get('name')?.hasError('maxlength')\">\n          Le nom ne doit pas dépasser 100 caractères\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Version</mat-label>\n        <input matInput formControlName=\"version\" placeholder=\"Ex. 2022\" required>\n        <mat-error *ngIf=\"frameworkForm.get('version')?.hasError('required')\">\n          La version est obligatoire\n        </mat-error>\n        <mat-error *ngIf=\"frameworkForm.get('version')?.hasError('maxlength')\">\n          La version ne doit pas dépasser 20 caractères\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Description</mat-label>\n        <textarea matInput formControlName=\"description\" placeholder=\"Description du référentiel normatif\" rows=\"4\"></textarea>\n        <mat-error *ngIf=\"frameworkForm.get('description')?.hasError('maxlength')\">\n          La description ne doit pas dépasser 500 caractères\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button mat-button type=\"button\" (click)=\"onCancel()\">Annuler</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"frameworkForm.invalid\">\n      {{ isEditMode ? 'Mettre à jour' : 'Créer' }}\n    </button>\n  </mat-dialog-actions>\n</form> ","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiService } from '../../../core/services/api.service';\nimport { ComplianceFramework } from '../../../core/models/compliance.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComplianceFrameworkService {\n  private readonly basePath = '/compliance-frameworks';\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Récupère la liste de tous les frameworks de conformité\n   * @returns Observable contenant un tableau de frameworks\n   */\n  getFrameworks(): Observable<ComplianceFramework[]> {\n    return this.apiService.get<ComplianceFramework[]>(this.basePath)\n      .pipe(\n        catchError(error => {\n          console.error('Erreur lors de la récupération des frameworks de conformité', error);\n          return throwError(() => new Error('Impossible de récupérer la liste des frameworks de conformité. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Récupère un framework de conformité par son identifiant\n   * @param id Identifiant du framework\n   * @returns Observable contenant le framework\n   */\n  getFramework(id: string): Observable<ComplianceFramework> {\n    return this.apiService.get<ComplianceFramework>(`${this.basePath}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la récupération du framework ${id}`, error);\n          return throwError(() => new Error('Impossible de récupérer les détails du framework. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Crée un nouveau framework de conformité\n   * @param framework Données du framework à créer\n   * @returns Observable contenant le framework créé\n   */\n  createFramework(framework: Partial<ComplianceFramework>): Observable<ComplianceFramework> {\n    return this.apiService.post<ComplianceFramework>(this.basePath, framework)\n      .pipe(\n        catchError(error => {\n          console.error('Erreur lors de la création du framework', error);\n          const message = this.getErrorMessage(error) || 'Impossible de créer le framework. Veuillez réessayer.';\n          return throwError(() => new Error(message));\n        })\n      );\n  }\n\n  /**\n   * Met à jour un framework de conformité existant\n   * @param id Identifiant du framework\n   * @param framework Nouvelles données du framework\n   * @returns Observable contenant le framework mis à jour\n   */\n  updateFramework(id: string, framework: Partial<ComplianceFramework>): Observable<ComplianceFramework> {\n    return this.apiService.put<ComplianceFramework>(`${this.basePath}/${id}`, framework)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la mise à jour du framework ${id}`, error);\n          const message = this.getErrorMessage(error) || 'Impossible de mettre à jour le framework. Veuillez réessayer.';\n          return throwError(() => new Error(message));\n        })\n      );\n  }\n\n  /**\n   * Supprime un framework de conformité\n   * @param id Identifiant du framework à supprimer\n   * @returns Observable\n   */\n  deleteFramework(id: string): Observable<void> {\n    return this.apiService.delete<void>(`${this.basePath}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la suppression du framework ${id}`, error);\n          return throwError(() => new Error('Impossible de supprimer le framework. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Extrait un message d'erreur lisible de la réponse HTTP\n   * @param error Erreur HTTP\n   * @returns Message d'erreur lisible\n   */\n  private getErrorMessage(error: any): string {\n    if (error.error) {\n      if (typeof error.error === 'string') {\n        return error.error;\n      }\n      if (error.error.message) {\n        return error.error.message;\n      }\n      if (typeof error.error === 'object') {\n        // Si c'est un objet d'erreurs de validation (champ -> message)\n        const validationErrors = Object.entries(error.error)\n          .map(([field, message]) => `${field}: ${message}`)\n          .join(', ');\n        \n        if (validationErrors) {\n          return `Erreurs de validation: ${validationErrors}`;\n        }\n      }\n    }\n    return error.statusText || 'Une erreur est survenue';\n  }\n} ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ComplianceFramework } from '../../../core/models/compliance.model';\nimport { ComplianceFrameworkService } from '../services/compliance-framework.service';\nimport { FrameworkFormDialogComponent } from './framework-form-dialog/framework-form-dialog.component';\n\n@Component({\n  selector: 'app-frameworks',\n  templateUrl: './frameworks.component.html',\n  styleUrls: ['./frameworks.component.scss']\n})\nexport class FrameworksComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'version', 'description', 'actions'];\n  dataSource = new MatTableDataSource<ComplianceFramework>([]);\n  isLoading = true;\n  error: string | null = null;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private frameworkService: ComplianceFrameworkService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.loadFrameworks();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  loadFrameworks() {\n    this.isLoading = true;\n    this.error = null;\n    \n    this.frameworkService.getFrameworks().subscribe({\n      next: (frameworks) => {\n        this.dataSource.data = frameworks;\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des frameworks', error);\n        this.error = 'Impossible de charger les frameworks. Veuillez réessayer.';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  openFrameworkDialog(framework?: ComplianceFramework) {\n    const dialogRef = this.dialog.open(FrameworkFormDialogComponent, {\n      width: '500px',\n      data: framework || {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        if (result.id) {\n          // Mise à jour\n          this.updateFramework(result);\n        } else {\n          // Création\n          this.createFramework(result);\n        }\n      }\n    });\n  }\n\n  createFramework(framework: Partial<ComplianceFramework>) {\n    this.frameworkService.createFramework(framework).subscribe({\n      next: (newFramework) => {\n        this.dataSource.data = [...this.dataSource.data, newFramework];\n      },\n      error: (error) => {\n        console.error('Erreur lors de la création du framework', error);\n        // Gérer l'erreur (notification, etc.)\n      }\n    });\n  }\n\n  updateFramework(framework: ComplianceFramework) {\n    this.frameworkService.updateFramework(framework.id, framework).subscribe({\n      next: (updatedFramework) => {\n        const index = this.dataSource.data.findIndex(f => f.id === updatedFramework.id);\n        if (index !== -1) {\n          const updatedData = [...this.dataSource.data];\n          updatedData[index] = updatedFramework;\n          this.dataSource.data = updatedData;\n        }\n      },\n      error: (error) => {\n        console.error('Erreur lors de la mise à jour du framework', error);\n        // Gérer l'erreur (notification, etc.)\n      }\n    });\n  }\n\n  deleteFramework(id: string) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce framework? Cette action est irréversible.')) {\n      this.frameworkService.deleteFramework(id).subscribe({\n        next: () => {\n          this.dataSource.data = this.dataSource.data.filter(f => f.id !== id);\n        },\n        error: (error) => {\n          console.error('Erreur lors de la suppression du framework', error);\n          // Gérer l'erreur (notification, etc.)\n        }\n      });\n    }\n  }\n} ","<div class=\"frameworks-container\">\n  <div class=\"frameworks-header\">\n    <h2>Référentiels Normatifs</h2>\n    <button mat-raised-button color=\"primary\" (click)=\"openFrameworkDialog()\">\n      <mat-icon>add</mat-icon>\n      Nouveau Référentiel\n    </button>\n  </div>\n\n  <mat-form-field appearance=\"outline\" class=\"filter-field\">\n    <mat-label>Rechercher</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ISO 27001\" #input>\n    <mat-icon matSuffix>search</mat-icon>\n  </mat-form-field>\n\n  <div class=\"loading-error-container\" *ngIf=\"isLoading || error\">\n    <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div *ngIf=\"error\" class=\"error-message\">\n      <mat-icon>error</mat-icon>\n      <span>{{ error }}</span>\n    </div>\n  </div>\n\n  <div class=\"mat-elevation-z2 data-table-container\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <!-- Nom Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom </th>\n        <td mat-cell *matCellDef=\"let framework\"> {{framework.name}} </td>\n      </ng-container>\n\n      <!-- Version Column -->\n      <ng-container matColumnDef=\"version\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Version </th>\n        <td mat-cell *matCellDef=\"let framework\"> {{framework.version}} </td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef> Description </th>\n        <td mat-cell *matCellDef=\"let framework\"> {{framework.description}} </td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let framework\">\n          <button mat-icon-button color=\"primary\" [routerLink]=\"['/compliance/frameworks', framework.id]\" matTooltip=\"Voir les détails\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button mat-icon-button color=\"accent\" (click)=\"openFrameworkDialog(framework)\" matTooltip=\"Modifier\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" (click)=\"deleteFramework(framework.id)\" matTooltip=\"Supprimer\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">\n          <div class=\"no-data-message\">\n            <mat-icon>info</mat-icon>\n            <span *ngIf=\"input.value\">Aucun référentiel trouvé pour \"{{input.value}}\"</span>\n            <span *ngIf=\"!input.value && !isLoading && !error\">Aucun référentiel disponible</span>\n          </div>\n        </td>\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div> ","export enum ComplianceRequirementType {\n  PREVENTIVE = 'PREVENTIVE',\n  DETECTIVE = 'DETECTIVE',\n  CORRECTIVE = 'CORRECTIVE'\n}\n\nexport enum ComplianceStatus {\n  COMPLIANT = 'COMPLIANT',\n  NON_COMPLIANT = 'NON_COMPLIANT',\n  PARTIALLY_COMPLIANT = 'PARTIALLY_COMPLIANT',\n  NOT_APPLICABLE = 'NOT_APPLICABLE'\n}\n\nexport interface ComplianceFramework {\n  id: string;\n  name: string;\n  version: string;\n  description?: string;\n  requirements?: ComplianceRequirement[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface ComplianceRequirement {\n  id: string;\n  framework: ComplianceFramework;\n  frameworkId?: string;\n  code: string;\n  description: string;\n  type: ComplianceRequirementType;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface RiskComplianceMapping {\n  id: string;\n  requirement: ComplianceRequirement;\n  requirementId: string;\n  risk: any; // Risk type from risk module\n  riskId: string;\n  status: ComplianceStatus;\n  comment?: string;\n  evidence?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport interface GapAnalysisItem {\n  requirement: ComplianceRequirement;\n  status: ComplianceStatus;\n  gaps?: string;\n  actionPlanExists?: boolean;\n}\n\nexport interface GapAnalysisStats {\n  compliantCount: number;\n  nonCompliantCount: number;\n  partiallyCompliantCount: number;\n  notApplicableCount: number;\n  compliancePercentage: number;\n}\n\nexport interface GapAnalysisResult {\n  // Comptage par statut de conformité\n  counts: Record<ComplianceStatus, number>;\n  // Liste des exigences non mappées\n  gaps: ComplianceRequirement[];\n  // Pourcentage global de conformité\n  compliancePercentage: number;\n} ","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ComplianceRequirement, ComplianceRequirementType, ComplianceFramework } from '../../../../core/models/compliance.model';\n\n@Component({\n  selector: 'app-requirement-form-dialog',\n  templateUrl: './requirement-form-dialog.component.html',\n  styleUrls: ['./requirement-form-dialog.component.scss']\n})\nexport class RequirementFormDialogComponent implements OnInit {\n  requirementForm!: FormGroup;\n  isEditMode: boolean = false;\n  dialogTitle: string = 'Créer une Exigence';\n  frameworks: ComplianceFramework[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<RequirementFormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.frameworks = data.frameworks || [];\n  }\n\n  ngOnInit(): void {\n    this.isEditMode = !!this.data.requirement?.id;\n    \n    if (this.isEditMode) {\n      this.dialogTitle = 'Modifier l\\'Exigence';\n    }\n\n    this.initForm();\n  }\n\n  initForm(): void {\n    const requirement = this.data.requirement || {};\n    \n    this.requirementForm = this.fb.group({\n      id: [requirement.id],\n      code: [requirement.code || '', [Validators.required, Validators.maxLength(50)]],\n      description: [requirement.description || '', [Validators.required, Validators.maxLength(500)]],\n      type: [requirement.type || ComplianceRequirementType.PREVENTIVE, Validators.required],\n      frameworkId: [requirement.frameworkId || '', Validators.required]\n    });\n\n    console.log('Framework de l\\'exigence en édition :', requirement.framework);\n\n    // Si on est en mode édition et que l'exigence a un framework\n    if (this.isEditMode && requirement.framework) {\n      this.requirementForm.patchValue({\n        frameworkId: requirement.framework.id\n      });\n\n      console.log('Framework ID pré-rempli :', requirement.framework.id);\n    }\n  }\n\n  onSubmit(): void {\n    if (this.requirementForm.valid) {\n      const formValue = this.requirementForm.value;\n      \n      // Pour les APIs backend, on a besoin du frameworkId\n      const result = {\n        ...formValue\n      };\n      \n      this.dialogRef.close(result);\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n} ","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form [formGroup]=\"requirementForm\" (ngSubmit)=\"onSubmit()\">\n  <mat-dialog-content>\n    <div class=\"form-fields\">\n      <input type=\"hidden\" formControlName=\"id\">\n\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Référentiel</mat-label>\n        <mat-select formControlName=\"frameworkId\" required>\n          <mat-option *ngFor=\"let framework of frameworks\" [value]=\"framework.id\">\n            {{ framework.name }} ({{ framework.version }})\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"requirementForm.get('frameworkId')?.hasError('required')\">\n          Le référentiel est obligatoire\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Code</mat-label>\n        <input matInput formControlName=\"code\" placeholder=\"Ex. A.5.1\" required>\n        <mat-error *ngIf=\"requirementForm.get('code')?.hasError('required')\">\n          Le code est obligatoire\n        </mat-error>\n        <mat-error *ngIf=\"requirementForm.get('code')?.hasError('maxlength')\">\n          Le code ne doit pas dépasser 50 caractères\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Type</mat-label>\n        <mat-select formControlName=\"type\" required>\n          <mat-option value=\"PREVENTIVE\">Préventif</mat-option>\n          <mat-option value=\"DETECTIVE\">Détectif</mat-option>\n          <mat-option value=\"CORRECTIVE\">Correctif</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"requirementForm.get('type')?.hasError('required')\">\n          Le type est obligatoire\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Description</mat-label>\n        <textarea matInput formControlName=\"description\" placeholder=\"Description de l'exigence\" rows=\"4\" required></textarea>\n        <mat-error *ngIf=\"requirementForm.get('description')?.hasError('required')\">\n          La description est obligatoire\n        </mat-error>\n        <mat-error *ngIf=\"requirementForm.get('description')?.hasError('maxlength')\">\n          La description ne doit pas dépasser 500 caractères\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button mat-button type=\"button\" (click)=\"onCancel()\">Annuler</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"requirementForm.invalid\">\n      {{ isEditMode ? 'Mettre à jour' : 'Créer' }}\n    </button>\n  </mat-dialog-actions>\n</form> ","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiService } from '../../../core/services/api.service';\nimport { ComplianceRequirement, ComplianceRequirementType } from '../../../core/models/compliance.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComplianceRequirementService {\n  private readonly basePath = '/compliance-requirements';\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Récupère la liste de toutes les exigences de conformité\n   * @returns Observable contenant un tableau d'exigences\n   */\n  getRequirements(): Observable<ComplianceRequirement[]> {\n    return this.apiService.get<ComplianceRequirement[]>(this.basePath)\n      .pipe(\n        catchError(error => {\n          console.error('Erreur lors de la récupération des exigences de conformité', error);\n          return throwError(() => new Error('Impossible de récupérer la liste des exigences de conformité. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Récupère la liste des exigences de conformité filtrées par framework\n   * @param frameworkId Identifiant du framework\n   * @returns Observable contenant un tableau d'exigences\n   */\n  getRequirementsByFramework(frameworkId: string): Observable<ComplianceRequirement[]> {\n    return this.apiService.get<ComplianceRequirement[]>(`${this.basePath}?frameworkId=${frameworkId}`)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la récupération des exigences du framework ${frameworkId}`, error);\n          return throwError(() => new Error('Impossible de récupérer les exigences de ce framework. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Récupère la liste des exigences de conformité filtrées par type\n   * @param type Type d'exigence\n   * @returns Observable contenant un tableau d'exigences\n   */\n  getRequirementsByType(type: ComplianceRequirementType): Observable<ComplianceRequirement[]> {\n    return this.apiService.get<ComplianceRequirement[]>(`${this.basePath}?type=${type}`)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la récupération des exigences de type ${type}`, error);\n          return throwError(() => new Error(`Impossible de récupérer les exigences de type ${type}. Veuillez réessayer.`));\n        })\n      );\n  }\n\n  /**\n   * Récupère une exigence de conformité par son identifiant\n   * @param id Identifiant de l'exigence\n   * @returns Observable contenant l'exigence\n   */\n  getRequirement(id: string): Observable<ComplianceRequirement> {\n    return this.apiService.get<ComplianceRequirement>(`${this.basePath}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la récupération de l'exigence ${id}`, error);\n          return throwError(() => new Error('Impossible de récupérer les détails de l\\'exigence. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Crée une nouvelle exigence de conformité\n   * @param requirement Données de l'exigence à créer\n   * @returns Observable contenant l'exigence créée\n   */\n  createRequirement(requirement: Partial<ComplianceRequirement>): Observable<ComplianceRequirement> {\n    return this.apiService.post<ComplianceRequirement>(this.basePath, requirement)\n      .pipe(\n        catchError(error => {\n          console.error('Erreur lors de la création de l\\'exigence', error);\n          const message = this.getErrorMessage(error) || 'Impossible de créer l\\'exigence. Veuillez réessayer.';\n          return throwError(() => new Error(message));\n        })\n      );\n  }\n\n  /**\n   * Met à jour une exigence de conformité existante\n   * @param id Identifiant de l'exigence\n   * @param requirement Nouvelles données de l'exigence\n   * @returns Observable contenant l'exigence mise à jour\n   */\n  updateRequirement(id: string, requirement: Partial<ComplianceRequirement>): Observable<ComplianceRequirement> {\n    return this.apiService.put<ComplianceRequirement>(`${this.basePath}/${id}`, requirement)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la mise à jour de l'exigence ${id}`, error);\n          const message = this.getErrorMessage(error) || 'Impossible de mettre à jour l\\'exigence. Veuillez réessayer.';\n          return throwError(() => new Error(message));\n        })\n      );\n  }\n\n  /**\n   * Supprime une exigence de conformité\n   * @param id Identifiant de l'exigence à supprimer\n   * @returns Observable\n   */\n  deleteRequirement(id: string): Observable<void> {\n    return this.apiService.delete<void>(`${this.basePath}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la suppression de l'exigence ${id}`, error);\n          return throwError(() => new Error('Impossible de supprimer l\\'exigence. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Extrait un message d'erreur lisible de la réponse HTTP\n   * @param error Erreur HTTP\n   * @returns Message d'erreur lisible\n   */\n  private getErrorMessage(error: any): string {\n    if (error.error) {\n      if (typeof error.error === 'string') {\n        return error.error;\n      }\n      if (error.error.message) {\n        return error.error.message;\n      }\n      if (typeof error.error === 'object') {\n        // Si c'est un objet d'erreurs de validation (champ -> message)\n        const validationErrors = Object.entries(error.error)\n          .map(([field, message]) => `${field}: ${message}`)\n          .join(', ');\n        \n        if (validationErrors) {\n          return `Erreurs de validation: ${validationErrors}`;\n        }\n      }\n    }\n    return error.statusText || 'Une erreur est survenue';\n  }\n} ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ComplianceFramework, ComplianceRequirement } from '../../../../core/models/compliance.model';\nimport { ComplianceFrameworkService } from '../../services/compliance-framework.service';\nimport { ComplianceRequirementService } from '../../services/compliance-requirement.service';\nimport { FrameworkFormDialogComponent } from '../framework-form-dialog/framework-form-dialog.component';\nimport { RequirementFormDialogComponent } from '../../requirements/requirement-form-dialog/requirement-form-dialog.component';\n\n@Component({\n  selector: 'app-framework-detail',\n  templateUrl: './framework-detail.component.html',\n  styleUrls: ['./framework-detail.component.scss']\n})\nexport class FrameworkDetailComponent implements OnInit {\n  framework: ComplianceFramework | null = null;\n  requirementsDataSource = new MatTableDataSource<ComplianceRequirement>([]);\n  displayedColumns: string[] = ['code', 'description', 'type', 'actions'];\n  isLoading = true;\n  error: string | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private frameworkService: ComplianceFrameworkService,\n    private requirementService: ComplianceRequirementService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.loadFramework(id);\n      } else {\n        this.error = 'Identifiant du framework manquant';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  loadFramework(id: string): void {\n    this.isLoading = true;\n    this.error = null;\n\n    this.frameworkService.getFramework(id).subscribe({\n      next: (framework) => {\n        this.framework = framework;\n        this.loadRequirements(id);\n      },\n      error: (error) => {\n        console.error(`Erreur lors du chargement du framework ${id}`, error);\n        this.error = 'Impossible de charger les détails du framework. Veuillez réessayer.';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  loadRequirements(frameworkId: string): void {\n    this.requirementService.getRequirementsByFramework(frameworkId).subscribe({\n      next: (requirements) => {\n        this.requirementsDataSource.data = requirements;\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error(`Erreur lors du chargement des exigences du framework ${frameworkId}`, error);\n        this.error = 'Impossible de charger les exigences du framework. Veuillez réessayer.';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  openFrameworkDialog(): void {\n    if (!this.framework) return;\n\n    const dialogRef = this.dialog.open(FrameworkFormDialogComponent, {\n      width: '500px',\n      data: this.framework\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.updateFramework(result);\n      }\n    });\n  }\n\n  updateFramework(framework: ComplianceFramework): void {\n    if (!this.framework) return;\n\n    this.frameworkService.updateFramework(framework.id, framework).subscribe({\n      next: (updatedFramework) => {\n        this.framework = updatedFramework;\n      },\n      error: (error) => {\n        console.error(`Erreur lors de la mise à jour du framework ${framework.id}`, error);\n        // Gérer l'erreur (notification, etc.)\n      }\n    });\n  }\n\n  openRequirementDialog(requirement?: ComplianceRequirement): void {\n    if (!this.framework) return;\n\n    // Préparer les données pour le dialogue\n    const data: Partial<ComplianceRequirement> = requirement ? { ...requirement } : { \n      framework: this.framework\n    };\n\n    const dialogRef = this.dialog.open(RequirementFormDialogComponent, {\n      width: '500px',\n      data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        if (result.id) {\n          // Mise à jour\n          this.updateRequirement(result);\n        } else {\n          // Création\n          this.createRequirement(result);\n        }\n      }\n    });\n  }\n\n  createRequirement(requirement: Partial<ComplianceRequirement>): void {\n    this.requirementService.createRequirement(requirement).subscribe({\n      next: (newRequirement) => {\n        this.requirementsDataSource.data = [...this.requirementsDataSource.data, newRequirement];\n      },\n      error: (error) => {\n        console.error('Erreur lors de la création de l\\'exigence', error);\n        // Gérer l'erreur (notification, etc.)\n      }\n    });\n  }\n\n  updateRequirement(requirement: ComplianceRequirement): void {\n    this.requirementService.updateRequirement(requirement.id, requirement).subscribe({\n      next: (updatedRequirement) => {\n        const index = this.requirementsDataSource.data.findIndex(r => r.id === updatedRequirement.id);\n        if (index !== -1) {\n          const updatedData = [...this.requirementsDataSource.data];\n          updatedData[index] = updatedRequirement;\n          this.requirementsDataSource.data = updatedData;\n        }\n      },\n      error: (error) => {\n        console.error(`Erreur lors de la mise à jour de l'exigence ${requirement.id}`, error);\n        // Gérer l'erreur (notification, etc.)\n      }\n    });\n  }\n\n  deleteRequirement(id: string): void {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cette exigence? Cette action est irréversible.')) {\n      this.requirementService.deleteRequirement(id).subscribe({\n        next: () => {\n          this.requirementsDataSource.data = this.requirementsDataSource.data.filter(r => r.id !== id);\n        },\n        error: (error) => {\n          console.error(`Erreur lors de la suppression de l'exigence ${id}`, error);\n          // Gérer l'erreur (notification, etc.)\n        }\n      });\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['/compliance/frameworks']);\n  }\n} ","<div class=\"framework-detail-container\">\n  <div class=\"back-button\">\n    <button mat-icon-button color=\"primary\" (click)=\"goBack()\" matTooltip=\"Retour à la liste\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n  </div>\n\n  <div class=\"loading-error-container\" *ngIf=\"isLoading || error\">\n    <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div *ngIf=\"error\" class=\"error-message\">\n      <mat-icon>error</mat-icon>\n      <span>{{ error }}</span>\n    </div>\n  </div>\n\n  <div *ngIf=\"framework && !isLoading\" class=\"framework-detail-content\">\n    <mat-card class=\"framework-info-card\">\n      <mat-card-header>\n        <mat-card-title class=\"card-title\">\n          <span>{{ framework.name }} {{ framework.version }}</span>\n          <button mat-icon-button color=\"primary\" (click)=\"openFrameworkDialog()\" matTooltip=\"Modifier\">\n            <mat-icon>edit</mat-icon>\n          </button>\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <p *ngIf=\"framework.description\">{{ framework.description }}</p>\n        <p *ngIf=\"!framework.description\"><em>Aucune description fournie</em></p>\n      </mat-card-content>\n    </mat-card>\n\n    <div class=\"requirements-section\">\n      <div class=\"section-header\">\n        <h2>Exigences du référentiel</h2>\n        <button mat-raised-button color=\"primary\" (click)=\"openRequirementDialog()\">\n          <mat-icon>add</mat-icon>\n          Nouvelle Exigence\n        </button>\n      </div>\n\n      <div class=\"mat-elevation-z2 data-table-container\">\n        <table mat-table [dataSource]=\"requirementsDataSource\" matSort>\n          <!-- Code Column -->\n          <ng-container matColumnDef=\"code\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Code </th>\n            <td mat-cell *matCellDef=\"let requirement\"> {{requirement.code}} </td>\n          </ng-container>\n\n          <!-- Description Column -->\n          <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef> Description </th>\n            <td mat-cell *matCellDef=\"let requirement\"> {{requirement.description}} </td>\n          </ng-container>\n\n          <!-- Type Column -->\n          <ng-container matColumnDef=\"type\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\n            <td mat-cell *matCellDef=\"let requirement\">\n              <span [ngClass]=\"'type-badge ' + requirement.type.toLowerCase()\">\n                {{requirement.type}}\n              </span>\n            </td>\n          </ng-container>\n\n          <!-- Actions Column -->\n          <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\n            <td mat-cell *matCellDef=\"let requirement\">\n              <button mat-icon-button color=\"primary\" [routerLink]=\"['/compliance/requirements', requirement.id]\" matTooltip=\"Voir les détails\">\n                <mat-icon>visibility</mat-icon>\n              </button>\n              <button mat-icon-button color=\"accent\" (click)=\"openRequirementDialog(requirement)\" matTooltip=\"Modifier\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button mat-icon-button color=\"warn\" (click)=\"deleteRequirement(requirement.id)\" matTooltip=\"Supprimer\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n          <!-- Row shown when there is no matching data. -->\n          <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">\n              <div class=\"no-data-message\">\n                <mat-icon>info</mat-icon>\n                <span>Aucune exigence disponible pour ce référentiel</span>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n\n    <!-- Ajout d'un bouton Modifier avec contrôle de rôle -->\n    <button mat-raised-button color=\"primary\" [routerLink]=\"['/compliance/frameworks/edit', framework.id]\" *appHasRole=\"['admin']\">\n      <mat-icon>edit</mat-icon>\n      Modifier le référentiel\n    </button>\n  </div>\n</div> ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KeycloakService } from 'src/app/core/auth/keycloak.service';\nimport { ComplianceFramework } from 'src/app/core/models/compliance.model';\nimport { ComplianceFrameworkService } from '../../services/compliance-framework.service';\n\n@Component({\n  selector: 'app-framework-edit',\n  templateUrl: './framework-edit.component.html',\n  styleUrls: ['./framework-edit.component.css']\n})\nexport class FrameworkEditComponent implements OnInit {\n  frameworkForm!: FormGroup;\n  framework!: ComplianceFramework;\n  frameworkId!: string;\n  isLoading = true;\n  error: string | null = null;\n  isAdmin = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private frameworkService: ComplianceFrameworkService,\n    private keycloakService: KeycloakService\n  ) {}\n\n  ngOnInit(): void {\n    // Vérifier si l'utilisateur est admin\n    this.isAdmin = this.keycloakService.hasRole('admin');\n    \n    if (!this.isAdmin) {\n      console.warn('Utilisateur non autorisé à éditer les frameworks');\n      this.router.navigate(['/compliance/frameworks']);\n      return;\n    }\n\n    this.initForm();\n    \n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.frameworkId = id;\n        this.loadFramework(id);\n      } else {\n        this.error = 'Identifiant du framework manquant';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  initForm(): void {\n    this.frameworkForm = this.fb.group({\n      id: [''],\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      version: ['', [Validators.required, Validators.maxLength(20)]],\n      description: ['', Validators.maxLength(500)]\n    });\n  }\n\n  loadFramework(id: string): void {\n    this.isLoading = true;\n    this.error = null;\n\n    this.frameworkService.getFramework(id).subscribe({\n      next: (framework) => {\n        this.framework = framework;\n        this.frameworkForm.patchValue({\n          id: framework.id,\n          name: framework.name,\n          version: framework.version,\n          description: framework.description || ''\n        });\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error(`Erreur lors du chargement du framework ${id}`, error);\n        this.error = 'Impossible de charger les détails du framework. Veuillez réessayer.';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.frameworkForm.invalid) {\n      return;\n    }\n\n    const updatedFramework: ComplianceFramework = this.frameworkForm.value;\n    \n    this.isLoading = true;\n    this.frameworkService.updateFramework(this.frameworkId, updatedFramework).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.router.navigate(['/compliance/frameworks', this.frameworkId]);\n      },\n      error: (error) => {\n        console.error(`Erreur lors de la mise à jour du framework ${this.frameworkId}`, error);\n        this.error = 'Impossible de mettre à jour le framework. Veuillez réessayer.';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  goBack(): void {\n    this.router.navigate(['/compliance/frameworks', this.frameworkId]);\n  }\n}\n","<div class=\"framework-edit-container\">\n  <div class=\"back-button\">\n    <button mat-icon-button color=\"primary\" (click)=\"goBack()\" matTooltip=\"Retour au framework\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n  </div>\n\n  <h2>Modifier le Référentiel Normatif</h2>\n\n  <div class=\"loading-error-container\" *ngIf=\"isLoading || error\">\n    <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div *ngIf=\"error\" class=\"error-message\">\n      <mat-icon>error</mat-icon>\n      <span>{{ error }}</span>\n    </div>\n  </div>\n\n  <div *ngIf=\"!isLoading && !error && isAdmin\" class=\"form-container\">\n    <form [formGroup]=\"frameworkForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-card>\n        <mat-card-content>\n          <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Nom</mat-label>\n            <input matInput formControlName=\"name\" placeholder=\"Ex: ISO 27001\" required>\n            <mat-error *ngIf=\"frameworkForm.get('name')?.hasError('required')\">\n              Le nom est obligatoire\n            </mat-error>\n            <mat-error *ngIf=\"frameworkForm.get('name')?.hasError('maxlength')\">\n              Le nom ne doit pas dépasser 100 caractères\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Version</mat-label>\n            <input matInput formControlName=\"version\" placeholder=\"Ex: 2022\" required>\n            <mat-error *ngIf=\"frameworkForm.get('version')?.hasError('required')\">\n              La version est obligatoire\n            </mat-error>\n            <mat-error *ngIf=\"frameworkForm.get('version')?.hasError('maxlength')\">\n              La version ne doit pas dépasser 20 caractères\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"form-field\">\n            <mat-label>Description</mat-label>\n            <textarea matInput formControlName=\"description\" placeholder=\"Description du référentiel normatif\" rows=\"4\"></textarea>\n            <mat-error *ngIf=\"frameworkForm.get('description')?.hasError('maxlength')\">\n              La description ne doit pas dépasser 500 caractères\n            </mat-error>\n          </mat-form-field>\n        </mat-card-content>\n\n        <mat-card-actions align=\"end\">\n          <button mat-button type=\"button\" (click)=\"goBack()\">Annuler</button>\n          <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"frameworkForm.invalid\">\n            Enregistrer\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </form>\n  </div>\n\n  <div *ngIf=\"!isLoading && !error && !isAdmin\" class=\"not-authorized\">\n    <mat-icon color=\"warn\">block</mat-icon>\n    <h3>Accès non autorisé</h3>\n    <p>Vous n'avez pas les droits nécessaires pour modifier un référentiel normatif.</p>\n    <button mat-raised-button color=\"primary\" (click)=\"goBack()\">Retour aux référentiels</button>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ComplianceRequirement, ComplianceRequirementType, ComplianceFramework } from '../../../../core/models/compliance.model';\nimport { ComplianceRequirementService } from '../../services/compliance-requirement.service';\nimport { ComplianceFrameworkService } from '../../services/compliance-framework.service';\nimport { RequirementFormDialogComponent } from '../requirement-form-dialog/requirement-form-dialog.component';\n\n@Component({\n  selector: 'app-requirements',\n  templateUrl: './requirements.component.html',\n  styleUrls: ['./requirements.component.css']\n})\nexport class RequirementsComponent implements OnInit {\n  displayedColumns: string[] = ['code', 'framework', 'description', 'type', 'actions'];\n  dataSource = new MatTableDataSource<ComplianceRequirement>([]);\n  frameworks: ComplianceFramework[] = [];\n  selectedFramework: string = '';\n  selectedType: string = '';\n  isLoading = true;\n  error: string | null = null;\n  originalData: ComplianceRequirement[] = [];\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private requirementService: ComplianceRequirementService,\n    private frameworkService: ComplianceFrameworkService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.loadFrameworks();\n    this.loadRequirements();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  loadFrameworks() {\n    this.frameworkService.getFrameworks().subscribe({\n      next: (frameworks) => {\n        console.log('Frameworks chargés :', frameworks);\n        this.frameworks = frameworks;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des frameworks', error);\n      }\n    });\n  }\n\n  loadRequirements(frameworkId?: string) {\n    this.isLoading = true;\n    this.error = null;\n    \n    if (frameworkId) {\n      // Utiliser le service pour filtrer côté serveur\n      this.requirementService.getRequirementsByFramework(frameworkId).subscribe({\n        next: (requirements) => {\n          this.originalData = requirements;\n          this.dataSource.data = requirements;\n          // Réappliquer le filtre de type si nécessaire\n          if (this.selectedType) {\n            this.filterByType();\n          }\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error(`Erreur lors du chargement des exigences pour le framework ${frameworkId}`, error);\n          this.error = 'Impossible de charger les exigences. Veuillez réessayer.';\n          this.isLoading = false;\n        }\n      });\n    } else {\n      // Charger toutes les exigences\n      this.requirementService.getRequirements().subscribe({\n        next: (requirements) => {\n          this.originalData = requirements;\n          this.dataSource.data = requirements;\n          // Réappliquer le filtre de type si nécessaire\n          if (this.selectedType) {\n            this.filterByType();\n          }\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Erreur lors du chargement des exigences', error);\n          this.error = 'Impossible de charger les exigences. Veuillez réessayer.';\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n\n  filterByFramework() {\n    // Utiliser l'API pour filtrer par framework\n    if (this.selectedFramework) {\n      this.loadRequirements(this.selectedFramework);\n    } else {\n      this.loadRequirements();\n    }\n  }\n\n  filterByType() {\n    if (this.selectedType) {\n      // Appliquer le filtre de type localement car le backend ne supporte pas encore le filtrage par type\n      const filtered = this.originalData.filter(req => req.type === this.selectedType);\n      this.dataSource.data = filtered;\n    } else {\n      // Si pas de filtre de type, utiliser les données originales\n      this.dataSource.data = this.originalData;\n    }\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getTypeLabel(type: ComplianceRequirementType): string {\n    switch (type) {\n      case ComplianceRequirementType.PREVENTIVE:\n        return 'Préventif';\n      case ComplianceRequirementType.DETECTIVE:\n        return 'Détectif';\n      case ComplianceRequirementType.CORRECTIVE:\n        return 'Correctif';\n      default:\n        return type;\n    }\n  }\n\n  getTypeClass(type: ComplianceRequirementType): string {\n    switch (type) {\n      case ComplianceRequirementType.PREVENTIVE:\n        return 'preventive-type';\n      case ComplianceRequirementType.DETECTIVE:\n        return 'detective-type';\n      case ComplianceRequirementType.CORRECTIVE:\n        return 'corrective-type';\n      default:\n        return '';\n    }\n  }\n\n  openRequirementDialog(requirement?: ComplianceRequirement) {\n    const dialogRef = this.dialog.open(RequirementFormDialogComponent, {\n      width: '600px',\n      data: {\n        requirement: requirement || {},\n        frameworks: this.frameworks\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        if (result.id) {\n          // Mise à jour\n          this.updateRequirement(result);\n        } else {\n          // Création\n          this.createRequirement(result);\n        }\n      }\n    });\n  }\n\n  createRequirement(requirement: Partial<ComplianceRequirement>) {\n    this.requirementService.createRequirement(requirement).subscribe({\n      next: (newRequirement) => {\n        this.originalData = [...this.originalData, newRequirement];\n        // Réappliquer les filtres actuels\n        this.filterByFramework();\n        this.filterByType();\n      },\n      error: (error) => {\n        console.error('Erreur lors de la création de l\\'exigence', error);\n        // Gérer l'erreur (notification, etc.)\n      }\n    });\n  }\n\n  updateRequirement(requirement: ComplianceRequirement) {\n    this.requirementService.updateRequirement(requirement.id, requirement).subscribe({\n      next: (updatedRequirement) => {\n        const index = this.originalData.findIndex(r => r.id === updatedRequirement.id);\n        if (index !== -1) {\n          const updatedData = [...this.originalData];\n          updatedData[index] = updatedRequirement;\n          this.originalData = updatedData;\n          // Réappliquer les filtres actuels\n          this.filterByFramework();\n          this.filterByType();\n        }\n      },\n      error: (error) => {\n        console.error('Erreur lors de la mise à jour de l\\'exigence', error);\n        // Gérer l'erreur (notification, etc.)\n      }\n    });\n  }\n\n  deleteRequirement(id: string) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer cette exigence? Cette action est irréversible.')) {\n      this.requirementService.deleteRequirement(id).subscribe({\n        next: () => {\n          this.originalData = this.originalData.filter(r => r.id !== id);\n          // Réappliquer les filtres actuels\n          this.filterByFramework();\n          this.filterByType();\n        },\n        error: (error) => {\n          console.error('Erreur lors de la suppression de l\\'exigence', error);\n          // Gérer l'erreur (notification, etc.)\n        }\n      });\n    }\n  }\n}\n","<div class=\"requirements-container\">\n  <div class=\"requirements-header\">\n    <h2>Exigences de Conformité</h2>\n    <button mat-raised-button color=\"primary\" (click)=\"openRequirementDialog()\">\n      <mat-icon>add</mat-icon>\n      Nouvelle Exigence\n    </button>\n  </div>\n\n  <mat-form-field appearance=\"outline\" class=\"filter-field\">\n    <mat-label>Rechercher</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. SEC-01\" #input>\n    <mat-icon matSuffix>search</mat-icon>\n  </mat-form-field>\n\n  <div class=\"filters-container\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Référentiel</mat-label>\n      <mat-select [(value)]=\"selectedFramework\" (selectionChange)=\"filterByFramework()\">\n        <mat-option [value]=\"''\">Tous les référentiels</mat-option>\n        <mat-option *ngFor=\"let framework of frameworks\" [value]=\"framework.id\">\n          {{framework.name}} ({{framework.version}})\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Type</mat-label>\n      <mat-select [(value)]=\"selectedType\" (selectionChange)=\"filterByType()\">\n        <mat-option [value]=\"''\">Tous les types</mat-option>\n        <mat-option value=\"PREVENTIVE\">Préventif</mat-option>\n        <mat-option value=\"DETECTIVE\">Détectif</mat-option>\n        <mat-option value=\"CORRECTIVE\">Correctif</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class=\"loading-error-container\" *ngIf=\"isLoading || error\">\n    <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div *ngIf=\"error\" class=\"error-message\">\n      <mat-icon>error</mat-icon>\n      <span>{{ error }}</span>\n    </div>\n  </div>\n\n  <div class=\"mat-elevation-z2 data-table-container\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <!-- Code Column -->\n      <ng-container matColumnDef=\"code\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Code </th>\n        <td mat-cell *matCellDef=\"let requirement\"> {{requirement.code}} </td>\n      </ng-container>\n\n      <!-- Framework Column -->\n      <ng-container matColumnDef=\"framework\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Référentiel </th>\n        <td mat-cell *matCellDef=\"let requirement\">\n          <div class=\"framework-info\" *ngIf=\"requirement.framework; else noFramework\">\n            <span class=\"framework-name\">{{ requirement.framework?.name }}</span>\n            <span class=\"framework-version\" *ngIf=\"requirement.framework?.version\">({{ requirement.framework?.version }})</span>\n          </div>\n          <ng-template #noFramework>-</ng-template>\n        </td>\n      </ng-container>\n\n      <!-- Description Column -->\n      <ng-container matColumnDef=\"description\">\n        <th mat-header-cell *matHeaderCellDef> Description </th>\n        <td mat-cell *matCellDef=\"let requirement\"> {{requirement.description}} </td>\n      </ng-container>\n\n      <!-- Type Column -->\n      <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\n        <td mat-cell *matCellDef=\"let requirement\"> \n          <span [ngClass]=\"getTypeClass(requirement.type)\">\n            {{getTypeLabel(requirement.type)}}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let requirement\">\n          <button mat-icon-button color=\"primary\" matTooltip=\"Voir les détails\">\n            <mat-icon>visibility</mat-icon>\n          </button>\n          <button mat-icon-button color=\"accent\" (click)=\"openRequirementDialog(requirement)\" matTooltip=\"Modifier\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" (click)=\"deleteRequirement(requirement.id)\" matTooltip=\"Supprimer\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"5\">\n          <div class=\"no-data-message\">\n            <mat-icon>info</mat-icon>\n            <span *ngIf=\"input.value\">Aucune exigence trouvée pour \"{{input.value}}\"</span>\n            <span *ngIf=\"!input.value && !isLoading && !error\">Aucune exigence disponible</span>\n          </div>\n        </td>\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\n// Interface simple pour les risques\nexport interface Risk {\n  id: string;\n  name: string;\n  description?: string;\n  severity?: string;\n  probability?: string;\n  status?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RiskService {\n  private readonly basePath = '/risks';\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Récupère la liste de tous les risques\n   * @returns Observable contenant un tableau de risques\n   */\n  getRisks(): Observable<Risk[]> {\n    return this.apiService.get<Risk[]>(this.basePath)\n      .pipe(\n        catchError(error => {\n          console.error('Erreur lors de la récupération des risques', error);\n          return throwError(() => new Error('Impossible de récupérer la liste des risques. Veuillez réessayer.'));\n        })\n      );\n  }\n\n  /**\n   * Récupère un risque par son identifiant\n   * @param id Identifiant du risque\n   * @returns Observable contenant le risque\n   */\n  getRisk(id: string): Observable<Risk> {\n    return this.apiService.get<Risk>(`${this.basePath}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error(`Erreur lors de la récupération du risque ${id}`, error);\n          return throwError(() => new Error('Impossible de récupérer les détails du risque. Veuillez réessayer.'));\n        })\n      );\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { forkJoin, finalize } from 'rxjs';\nimport { ComplianceFramework, ComplianceRequirement, ComplianceStatus, RiskComplianceMapping } from '../../../../core/models/compliance.model';\nimport { Risk, RiskService } from '../../../../core/services/risk.service';\nimport { ComplianceFrameworkService } from '../../services/compliance-framework.service';\nimport { ComplianceRequirementService } from '../../services/compliance-requirement.service';\n\n@Component({\n  selector: 'app-mapping-form-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatProgressSpinnerModule\n  ],\n  templateUrl: './mapping-form-dialog.component.html',\n  styleUrl: './mapping-form-dialog.component.css'\n})\nexport class MappingFormDialogComponent implements OnInit {\n  mappingForm!: FormGroup;\n  isEditMode: boolean = false;\n  dialogTitle: string = 'Créer un Mapping Risque-Conformité';\n  isSubmitting: boolean = false;\n  \n  // Données pour les sélecteurs du formulaire\n  risks: Risk[] = [];\n  frameworks: ComplianceFramework[] = [];\n  requirements: ComplianceRequirement[] = [];\n  filteredRequirements: ComplianceRequirement[] = [];\n  selectedFramework: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<MappingFormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private riskService: RiskService,\n    private frameworkService: ComplianceFrameworkService,\n    private requirementService: ComplianceRequirementService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.isEditMode = !!this.data?.mapping?.id;\n    if (this.isEditMode) {\n      this.dialogTitle = 'Modifier le Mapping Risque-Conformité';\n    }\n\n    this.initForm();\n    this.loadData();\n  }\n\n  initForm(): void {\n    const mapping = this.data?.mapping || {};\n    \n    this.mappingForm = this.fb.group({\n      id: [mapping.id],\n      riskId: [mapping.riskId || '', Validators.required],\n      requirementId: [mapping.requirementId || '', Validators.required],\n      status: [mapping.status || ComplianceStatus.NON_COMPLIANT, Validators.required],\n      comment: [mapping.comment || ''],\n      evidence: [mapping.evidence || '']\n    });\n\n    // Si on est en mode édition et qu'il y a des données préexistantes\n    if (this.isEditMode && mapping.requirement?.framework) {\n      this.selectedFramework = mapping.requirement.framework.id;\n    }\n  }\n\n  loadData(): void {\n    this.isSubmitting = true;\n    \n    // Récupération des données nécessaires en parallèle\n    forkJoin({\n      risks: this.riskService.getRisks(),\n      frameworks: this.frameworkService.getFrameworks()\n    }).subscribe({\n      next: (result) => {\n        this.risks = result.risks;\n        this.frameworks = result.frameworks;\n        \n        // Si on est en mode édition et qu'il y a des données préexistantes\n        if (this.isEditMode && this.data?.mapping) {\n          const mapping = this.data.mapping;\n          \n          // Charger les exigences du framework si on a un framework\n          if (mapping.requirement?.framework) {\n            this.selectedFramework = mapping.requirement.framework.id;\n            this.loadRequirementsByFramework(this.selectedFramework);\n          } else {\n            this.loadAllRequirements();\n          }\n          \n          this.mappingForm.patchValue({\n            riskId: mapping.riskId,\n            requirementId: mapping.requirementId,\n            status: mapping.status\n          });\n        } else {\n          // Si on n'est pas en mode édition, charger toutes les exigences\n          this.loadAllRequirements();\n        }\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des données', error);\n        this.snackBar.open('Erreur lors du chargement des données. Veuillez réessayer.', 'Fermer', {\n          duration: 5000,\n          panelClass: ['error-snackbar']\n        });\n        this.isSubmitting = false;\n      }\n    });\n  }\n\n  loadAllRequirements(): void {\n    this.requirementService.getRequirements().subscribe({\n      next: (requirements) => {\n        this.requirements = requirements;\n        this.filteredRequirements = requirements;\n        this.isSubmitting = false;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des exigences', error);\n        this.snackBar.open('Erreur lors du chargement des exigences. Veuillez réessayer.', 'Fermer', {\n          duration: 5000,\n          panelClass: ['error-snackbar']\n        });\n        this.isSubmitting = false;\n      }\n    });\n  }\n\n  loadRequirementsByFramework(frameworkId: string): void {\n    if (!frameworkId) {\n      this.loadAllRequirements();\n      return;\n    }\n\n    this.isSubmitting = true;\n    this.requirementService.getRequirementsByFramework(frameworkId)\n      .pipe(finalize(() => this.isSubmitting = false))\n      .subscribe({\n        next: (requirements) => {\n          this.requirements = requirements;\n          this.filteredRequirements = requirements;\n          \n          // Vérifier si l'exigence sélectionnée existe toujours dans la liste\n          this.validateRequirementSelection();\n        },\n        error: (error) => {\n          console.error(`Erreur lors du chargement des exigences du framework ${frameworkId}`, error);\n          this.snackBar.open('Erreur lors du chargement des exigences. Veuillez réessayer.', 'Fermer', {\n            duration: 5000,\n            panelClass: ['error-snackbar']\n          });\n        }\n      });\n  }\n\n  filterRequirements(): void {\n    if (!this.selectedFramework) {\n      this.loadAllRequirements();\n    } else {\n      this.loadRequirementsByFramework(this.selectedFramework);\n    }\n  }\n\n  validateRequirementSelection(): void {\n    // Vérifier si l'exigence sélectionnée existe toujours dans la liste\n    const currentReqId = this.mappingForm.get('requirementId')?.value;\n    if (currentReqId) {\n      const reqExists = this.filteredRequirements.some(req => req.id === currentReqId);\n      if (!reqExists) {\n        this.mappingForm.patchValue({ requirementId: '' });\n      }\n    }\n  }\n\n  onFrameworkChange(): void {\n    this.filterRequirements();\n  }\n\n  onSubmit(): void {\n    if (this.mappingForm.valid) {\n      this.isSubmitting = true;\n      \n      const formValue = this.mappingForm.value;\n      \n      this.dialogRef.close(formValue);\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>{{ dialogTitle }}</h2>\n\n<form [formGroup]=\"mappingForm\" (ngSubmit)=\"onSubmit()\">\n  <mat-dialog-content>\n    <div class=\"form-fields\">\n      <input type=\"hidden\" formControlName=\"id\">\n\n      <!-- Sélection du risque -->\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Risque</mat-label>\n        <mat-select formControlName=\"riskId\" required>\n          <mat-option *ngFor=\"let risk of risks\" [value]=\"risk.id\">\n            {{ risk.name }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"mappingForm.get('riskId')?.hasError('required')\">\n          Le risque est obligatoire\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Sélection du référentiel (pour filtrer les exigences) -->\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Référentiel</mat-label>\n        <mat-select [(value)]=\"selectedFramework\" (selectionChange)=\"onFrameworkChange()\">\n          <mat-option [value]=\"''\">Tous les référentiels</mat-option>\n          <mat-option *ngFor=\"let framework of frameworks\" [value]=\"framework.id\">\n            {{ framework.name }} ({{ framework.version }})\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- Sélection de l'exigence -->\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Exigence</mat-label>\n        <mat-select formControlName=\"requirementId\" required>\n          <mat-option *ngFor=\"let requirement of filteredRequirements\" [value]=\"requirement.id\">\n            {{ requirement.code }} - {{ requirement.description | slice:0:50 }}{{ requirement.description.length > 50 ? '...' : '' }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"mappingForm.get('requirementId')?.hasError('required')\">\n          L'exigence est obligatoire\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Statut de conformité -->\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Statut de conformité</mat-label>\n        <mat-select formControlName=\"status\" required>\n          <mat-option value=\"COMPLIANT\">Conforme</mat-option>\n          <mat-option value=\"NON_COMPLIANT\">Non conforme</mat-option>\n          <mat-option value=\"PARTIALLY_COMPLIANT\">Partiellement conforme</mat-option>\n          <mat-option value=\"NOT_APPLICABLE\">Non applicable</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"mappingForm.get('status')?.hasError('required')\">\n          Le statut est obligatoire\n        </mat-error>\n      </mat-form-field>\n\n      <!-- Commentaire -->\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Commentaire</mat-label>\n        <textarea matInput formControlName=\"comment\" placeholder=\"Commentaire sur le mapping\" rows=\"2\"></textarea>\n      </mat-form-field>\n\n      <!-- Preuves -->\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Preuves/Evidences</mat-label>\n        <textarea matInput formControlName=\"evidence\" placeholder=\"Justificatifs, preuves ou documents associés\" rows=\"3\"></textarea>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button mat-button type=\"button\" (click)=\"onCancel()\" [disabled]=\"isSubmitting\">Annuler</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"mappingForm.invalid || isSubmitting\">\n      <mat-spinner *ngIf=\"isSubmitting\" diameter=\"20\" class=\"spinner-button\"></mat-spinner>\n      <span *ngIf=\"!isSubmitting\">{{ isEditMode ? 'Mettre à jour' : 'Créer' }}</span>\n    </button>\n  </mat-dialog-actions>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ComplianceFramework, ComplianceStatus, RiskComplianceMapping } from '../../../../core/models/compliance.model';\nimport { ComplianceFrameworkService } from '../../services/compliance-framework.service';\nimport { RiskComplianceMappingService } from '../../services/risk-compliance-mapping.service';\nimport { MappingFormDialogComponent } from '../mapping-form-dialog/mapping-form-dialog.component';\n\n@Component({\n  selector: 'app-mappings',\n  templateUrl: './mappings.component.html',\n  styleUrls: ['./mappings.component.css']\n})\nexport class MappingsComponent implements OnInit {\n  displayedColumns: string[] = ['requirement', 'risk', 'status', 'comment', 'actions'];\n  dataSource = new MatTableDataSource<RiskComplianceMapping>([]);\n  frameworks: ComplianceFramework[] = [];\n  selectedFramework: string = '';\n  selectedStatus: string = '';\n  isLoading = true;\n  error: string | null = null;\n  originalData: RiskComplianceMapping[] = [];\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private mappingService: RiskComplianceMappingService,\n    private frameworkService: ComplianceFrameworkService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.loadFrameworks();\n    this.loadMappings();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  loadFrameworks() {\n    this.frameworkService.getFrameworks().subscribe({\n      next: (frameworks) => {\n        this.frameworks = frameworks;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des frameworks', error);\n        this.showErrorSnackbar('Impossible de charger les référentiels');\n      }\n    });\n  }\n\n  loadMappings() {\n    this.isLoading = true;\n    this.error = null;\n    \n    this.mappingService.getMappings().subscribe({\n      next: (mappings) => {\n        console.log('Mappings reçus du backend :', mappings);\n        this.originalData = mappings;\n        this.dataSource.data = mappings;\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des mappings', error);\n        this.error = 'Impossible de charger les mappings. Veuillez réessayer.';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  filterData() {\n    this.isLoading = true;\n    this.error = null;\n    \n    if (this.selectedFramework) {\n      // Utiliser le service pour charger les mappings filtrés par framework\n      this.mappingService.getMappingsByFramework(this.selectedFramework).subscribe({\n        next: (mappings) => {\n          this.originalData = mappings;\n          \n          // Appliquer également le filtre par statut si nécessaire\n          let filteredData = [...mappings];\n          if (this.selectedStatus) {\n            filteredData = filteredData.filter(mapping => mapping.status === this.selectedStatus);\n          }\n          \n          this.dataSource.data = filteredData;\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error(`Erreur lors du filtrage par framework (${this.selectedFramework})`, error);\n          this.error = 'Impossible de filtrer les mappings. Veuillez réessayer.';\n          this.isLoading = false;\n        }\n      });\n    } else {\n      // Si aucun framework n'est sélectionné, charger tous les mappings\n      if (this.selectedStatus) {\n        // Filtre local par statut uniquement\n        const filteredData = this.originalData.filter(\n          mapping => mapping.status === this.selectedStatus\n        );\n        this.dataSource.data = filteredData;\n      } else {\n        // Aucun filtre, afficher toutes les données\n        this.dataSource.data = this.originalData;\n      }\n      this.isLoading = false;\n    }\n    \n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getStatusLabel(status: ComplianceStatus): string {\n    switch (status) {\n      case ComplianceStatus.COMPLIANT:\n        return 'Conforme';\n      case ComplianceStatus.NON_COMPLIANT:\n        return 'Non conforme';\n      case ComplianceStatus.PARTIALLY_COMPLIANT:\n        return 'Partiellement conforme';\n      case ComplianceStatus.NOT_APPLICABLE:\n        return 'Non applicable';\n      default:\n        return status;\n    }\n  }\n\n  getStatusClass(status: ComplianceStatus): string {\n    switch (status) {\n      case ComplianceStatus.COMPLIANT:\n        return 'status-compliant';\n      case ComplianceStatus.NON_COMPLIANT:\n        return 'status-non-compliant';\n      case ComplianceStatus.PARTIALLY_COMPLIANT:\n        return 'status-partially-compliant';\n      case ComplianceStatus.NOT_APPLICABLE:\n        return 'status-not-applicable';\n      default:\n        return '';\n    }\n  }\n\n  openMappingDialog(mapping?: RiskComplianceMapping) {\n    const dialogRef = this.dialog.open(MappingFormDialogComponent, {\n      width: '600px',\n      data: {\n        mapping: mapping || {}\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        if (result.id) {\n          // Mise à jour\n          this.updateMapping(result);\n        } else {\n          // Création\n          this.createMapping(result);\n        }\n      }\n    });\n  }\n\n  createMapping(mapping: Partial<RiskComplianceMapping>) {\n    this.isLoading = true;\n    \n    this.mappingService.createMapping(mapping).subscribe({\n      next: (newMapping) => {\n        this.originalData = [...this.originalData, newMapping];\n        this.filterData();\n        this.isLoading = false;\n        this.showSuccessSnackbar('Mapping créé avec succès');\n      },\n      error: (error) => {\n        console.error('Erreur lors de la création du mapping', error);\n        this.isLoading = false;\n        this.showErrorSnackbar('Impossible de créer le mapping');\n      }\n    });\n  }\n\n  updateMapping(mapping: RiskComplianceMapping) {\n    this.isLoading = true;\n    \n    this.mappingService.updateMapping(mapping.id, mapping).subscribe({\n      next: (updatedMapping) => {\n        const index = this.originalData.findIndex(m => m.id === updatedMapping.id);\n        if (index !== -1) {\n          const updatedData = [...this.originalData];\n          updatedData[index] = updatedMapping;\n          this.originalData = updatedData;\n          this.filterData();\n        }\n        this.isLoading = false;\n        this.showSuccessSnackbar('Mapping mis à jour avec succès');\n      },\n      error: (error) => {\n        console.error('Erreur lors de la mise à jour du mapping', error);\n        this.isLoading = false;\n        this.showErrorSnackbar('Impossible de mettre à jour le mapping');\n      }\n    });\n  }\n\n  deleteMapping(id: string) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce mapping? Cette action est irréversible.')) {\n      this.isLoading = true;\n      \n      this.mappingService.deleteMapping(id).subscribe({\n        next: () => {\n          this.originalData = this.originalData.filter(m => m.id !== id);\n          this.filterData();\n          this.isLoading = false;\n          this.showSuccessSnackbar('Mapping supprimé avec succès');\n        },\n        error: (error) => {\n          console.error('Erreur lors de la suppression du mapping', error);\n          this.isLoading = false;\n          this.showErrorSnackbar('Impossible de supprimer le mapping');\n        }\n      });\n    }\n  }\n\n  private showSuccessSnackbar(message: string): void {\n    this.snackBar.open(message, 'Fermer', {\n      duration: 3000,\n      panelClass: ['success-snackbar']\n    });\n  }\n\n  private showErrorSnackbar(message: string): void {\n    this.snackBar.open(message, 'Fermer', {\n      duration: 5000,\n      panelClass: ['error-snackbar']\n    });\n  }\n}\n\n","<div class=\"mappings-container\">\n  <div class=\"mappings-header\">\n    <h2>Mappings Risques-Conformité</h2>\n    <button mat-raised-button color=\"primary\" (click)=\"openMappingDialog()\">\n      <mat-icon>add</mat-icon>\n      Nouveau Mapping\n    </button>\n  </div>\n\n  <div class=\"filter-container\">\n    <mat-form-field appearance=\"outline\" class=\"filter-field\">\n      <mat-label>Rechercher</mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ISO 27001\" #input>\n      <mat-icon matSuffix>search</mat-icon>\n    </mat-form-field>\n\n    <div class=\"filter-buttons\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Référentiel</mat-label>\n        <mat-select [(value)]=\"selectedFramework\" (selectionChange)=\"filterData()\">\n          <mat-option [value]=\"''\">Tous</mat-option>\n          <mat-option *ngFor=\"let framework of frameworks\" [value]=\"framework.id\">\n            {{ framework.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      \n      <mat-form-field appearance=\"outline\">\n        <mat-label>Statut</mat-label>\n        <mat-select [(value)]=\"selectedStatus\" (selectionChange)=\"filterData()\">\n          <mat-option [value]=\"''\">Tous</mat-option>\n          <mat-option value=\"COMPLIANT\">Conforme</mat-option>\n          <mat-option value=\"NON_COMPLIANT\">Non conforme</mat-option>\n          <mat-option value=\"PARTIALLY_COMPLIANT\">Partiellement conforme</mat-option>\n          <mat-option value=\"NOT_APPLICABLE\">Non applicable</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"loading-error-container\" *ngIf=\"isLoading || error\">\n    <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div *ngIf=\"error\" class=\"error-message\">\n      <mat-icon>error</mat-icon>\n      <span>{{ error }}</span>\n    </div>\n  </div>\n\n  <div class=\"mat-elevation-z2 data-table-container\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <!-- Exigence Column -->\n      <ng-container matColumnDef=\"requirement\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Exigence </th>\n        <td mat-cell *matCellDef=\"let mapping\"> \n          <div class=\"requirement-info\">\n            <span class=\"requirement-code\">{{ mapping.requirement?.code || 'N/A' }}</span>\n            <span class=\"requirement-description\">{{ mapping.requirement?.description | slice:0:50 }}{{ mapping.requirement?.description.length > 50 ? '...' : '' }}</span>\n            <span class=\"framework-name\">{{ mapping.requirement?.framework?.name || '' }}</span>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Risque Column -->\n      <ng-container matColumnDef=\"risk\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Risque </th>\n        <td mat-cell *matCellDef=\"let mapping\"> \n          <div class=\"risk-info\">\n            <span class=\"risk-name\">{{ mapping.risk?.name || 'N/A' }}</span>\n            <span class=\"risk-description\" *ngIf=\"mapping.risk?.description\">{{ mapping.risk?.description | slice:0:50 }}{{ mapping.risk?.description.length > 50 ? '...' : '' }}</span>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Statut Column -->\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Statut </th>\n        <td mat-cell *matCellDef=\"let mapping\">\n          <span [ngClass]=\"getStatusClass(mapping.status)\">\n            {{ getStatusLabel(mapping.status) }}\n          </span>\n        </td>\n      </ng-container>\n\n      <!-- Commentaire Column -->\n      <ng-container matColumnDef=\"comment\">\n        <th mat-header-cell *matHeaderCellDef> Commentaire </th>\n        <td mat-cell *matCellDef=\"let mapping\"> {{ mapping.comment || '-' }} </td>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\n        <td mat-cell *matCellDef=\"let mapping\">\n          <button mat-icon-button color=\"accent\" (click)=\"openMappingDialog(mapping)\" matTooltip=\"Modifier\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" (click)=\"deleteMapping(mapping.id)\" matTooltip=\"Supprimer\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"5\">\n          <div class=\"no-data-message\">\n            <mat-icon>info</mat-icon>\n            <span *ngIf=\"input.value\">Aucun mapping trouvé pour \"{{input.value}}\"</span>\n            <span *ngIf=\"!input.value && !isLoading && !error\">Aucun mapping disponible</span>\n          </div>\n        </td>\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ComplianceFramework, ComplianceRequirement, ComplianceStatus, GapAnalysisResult, RiskComplianceMapping } from '../../../../core/models/compliance.model';\nimport { Risk, RiskService } from '../../../../core/services/risk.service';\nimport { ComplianceFrameworkService } from '../../services/compliance-framework.service';\nimport { RiskComplianceMappingService } from '../../services/risk-compliance-mapping.service';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-gap-analysis',\n  templateUrl: './gap-analysis.component.html',\n  styleUrls: ['./gap-analysis.component.css']\n})\nexport class GapAnalysisComponent implements OnInit {\n  displayedColumns: string[] = ['code', 'description', 'actions'];\n  dataSource = new MatTableDataSource<ComplianceRequirement>([]);\n  frameworks: ComplianceFramework[] = [];\n  risks: Risk[] = [];\n  selectedFramework: string = '';\n  selectedRisk: string = '';\n  isLoading = false;\n  error: string | null = null;\n  gapAnalysisResult: GapAnalysisResult | null = null;\n  \n  // Compteurs\n  compliantCount = 0;\n  nonCompliantCount = 0;\n  partiallyCompliantCount = 0;\n  notApplicableCount = 0;\n  compliancePercentage = 0;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private frameworkService: ComplianceFrameworkService,\n    private mappingService: RiskComplianceMappingService,\n    private riskService: RiskService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.loadInitialData();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  loadInitialData() {\n    this.isLoading = true;\n    this.error = null;\n    \n    // Chargement en parallèle des frameworks et des risques\n    forkJoin({\n      frameworks: this.frameworkService.getFrameworks(),\n      risks: this.riskService.getRisks()\n    }).subscribe({\n      next: (result) => {\n        this.frameworks = result.frameworks;\n        this.risks = result.risks;\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des données initiales', error);\n        this.error = 'Impossible de charger les données. Veuillez réessayer.';\n        this.isLoading = false;\n        this.showErrorSnackbar('Impossible de charger les données');\n      }\n    });\n  }\n\n  loadGapAnalysis() {\n    if (!this.selectedFramework) {\n      this.resetGapAnalysis();\n      return;\n    }\n\n    this.isLoading = true;\n    this.error = null;\n\n    this.mappingService.getGapAnalysis(this.selectedFramework, this.selectedRisk || undefined).subscribe({\n      next: (result) => {\n        this.gapAnalysisResult = result;\n        \n        // Mettre à jour les compteurs à partir de la nouvelle structure\n        this.compliantCount = result.counts[ComplianceStatus.COMPLIANT] || 0;\n        this.nonCompliantCount = result.counts[ComplianceStatus.NON_COMPLIANT] || 0;\n        this.partiallyCompliantCount = result.counts[ComplianceStatus.PARTIALLY_COMPLIANT] || 0;\n        this.notApplicableCount = result.counts[ComplianceStatus.NOT_APPLICABLE] || 0;\n        this.compliancePercentage = result.compliancePercentage || 0;\n        \n        // Mettre à jour le tableau avec les exigences non couvertes\n        this.dataSource.data = result.gaps || [];\n        this.isLoading = false;\n        \n        // Affichage d'un message de succès\n        const message = this.selectedRisk \n          ? `Analyse d'écarts chargée pour le référentiel et le risque sélectionnés` \n          : `Analyse d'écarts chargée pour le référentiel`;\n        this.showSuccessSnackbar(message);\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement de l\\'analyse d\\'écarts', error);\n        this.error = 'Impossible de charger l\\'analyse d\\'écarts. Veuillez réessayer.';\n        this.isLoading = false;\n        this.showErrorSnackbar('Impossible de charger l\\'analyse d\\'écarts');\n      }\n    });\n  }\n  \n  resetGapAnalysis() {\n    this.gapAnalysisResult = null;\n    this.dataSource.data = [];\n    this.compliantCount = 0;\n    this.nonCompliantCount = 0;\n    this.partiallyCompliantCount = 0;\n    this.notApplicableCount = 0;\n    this.compliancePercentage = 0;\n  }\n\n  getStatusLabel(status: ComplianceStatus): string {\n    switch (status) {\n      case ComplianceStatus.COMPLIANT:\n        return 'Conforme';\n      case ComplianceStatus.NON_COMPLIANT:\n        return 'Non conforme';\n      case ComplianceStatus.PARTIALLY_COMPLIANT:\n        return 'Partiellement conforme';\n      case ComplianceStatus.NOT_APPLICABLE:\n        return 'Non applicable';\n      default:\n        return status;\n    }\n  }\n\n  getStatusClass(status: ComplianceStatus): string {\n    switch (status) {\n      case ComplianceStatus.COMPLIANT:\n        return 'status-compliant';\n      case ComplianceStatus.NON_COMPLIANT:\n        return 'status-non-compliant';\n      case ComplianceStatus.PARTIALLY_COMPLIANT:\n        return 'status-partially-compliant';\n      case ComplianceStatus.NOT_APPLICABLE:\n        return 'status-not-applicable';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Crée ou récupère un mapping pour une exigence, puis redirige vers la création d'un plan d'action\n   * @param requirement L'exigence pour laquelle créer un plan d'action\n   */\n  createActionPlan(requirement: ComplianceRequirement): void {\n    if (!this.selectedRisk) {\n      this.showErrorSnackbar('Veuillez sélectionner un risque avant de créer un plan d\\'action');\n      return;\n    }\n\n    this.isLoading = true;\n    this.showInfoSnackbar('Vérification du mapping risque-conformité...');\n    \n    // Vérifier si un mapping existe déjà pour cette combinaison risque/exigence\n    this.mappingService.getMappingByRiskAndRequirement(this.selectedRisk, requirement.id)\n      .pipe(\n        switchMap(mappings => {\n          if (mappings && mappings.length > 0) {\n            // Un mapping existe déjà, on utilise le premier trouvé\n            console.debug('GapAnalysis: Mapping existant trouvé:', mappings[0]);\n            return of(mappings[0]);\n          } else {\n            // Aucun mapping n'existe, on en crée un nouveau\n            console.debug('GapAnalysis: Aucun mapping trouvé, création d\\'un nouveau mapping');\n            this.showInfoSnackbar('Création d\\'un nouveau mapping risque-conformité...');\n            \n            const newMapping: Partial<RiskComplianceMapping> = {\n              riskId: this.selectedRisk,\n              requirementId: requirement.id,\n              status: ComplianceStatus.NON_COMPLIANT,\n              evidence: ''\n            };\n            \n            return this.mappingService.createMapping(newMapping);\n          }\n        }),\n        catchError(error => {\n          console.error('GapAnalysis: Erreur lors de la vérification ou création du mapping', error);\n          this.isLoading = false;\n          this.showErrorSnackbar('Impossible de créer le mapping. Veuillez réessayer.');\n          return of(null);\n        })\n      )\n      .subscribe({\n        next: (mapping) => {\n          this.isLoading = false;\n          \n          if (mapping) {\n            // Redirection vers la création d'un plan de remédiation avec l'ID du mapping\n            console.debug('GapAnalysis: Mapping obtenu avec succès:', mapping);\n            \n            // Construction de l'URL de navigation\n            const navigationPath = ['/remediation-plans', 'new', mapping.id];\n            console.debug('GapAnalysis: Tentative de navigation vers:', navigationPath.join('/'));\n            \n            // Essayer d'abord avec navigate\n            this.router.navigate(navigationPath).then(\n              success => {\n                console.debug('GapAnalysis: Navigation réussie avec navigate:', success);\n                if (!success) {\n                  // Si navigate échoue, essayer avec navigateByUrl\n                  console.debug('GapAnalysis: Tentative avec navigateByUrl');\n                  this.router.navigateByUrl(navigationPath.join('/')).then(\n                    success => {\n                      console.debug('GapAnalysis: Navigation réussie avec navigateByUrl:', success);\n                      if (!success) {\n                        console.error('GapAnalysis: Échec de la navigation');\n                        this.showErrorSnackbar('Impossible d\\'accéder au formulaire de création de plan');\n                      }\n                    },\n                    error => {\n                      console.error('GapAnalysis: Erreur de navigation avec navigateByUrl:', error);\n                      this.showErrorSnackbar('Erreur lors de la navigation vers le formulaire de création');\n                    }\n                  );\n                }\n              },\n              error => {\n                console.error('GapAnalysis: Erreur de navigation avec navigate:', error);\n                this.showErrorSnackbar('Erreur lors de la navigation vers le formulaire de création');\n              }\n            );\n          }\n        },\n        error: (error) => {\n          this.isLoading = false;\n          console.error('GapAnalysis: Erreur lors de la création du plan d\\'action', error);\n          this.showErrorSnackbar('Impossible de créer le plan d\\'action. Veuillez réessayer.');\n        }\n      });\n  }\n\n  private showSuccessSnackbar(message: string): void {\n    this.snackBar.open(message, 'Fermer', {\n      duration: 3000,\n      panelClass: ['success-snackbar']\n    });\n  }\n\n  private showErrorSnackbar(message: string): void {\n    this.snackBar.open(message, 'Fermer', {\n      duration: 5000,\n      panelClass: ['error-snackbar']\n    });\n  }\n\n  private showInfoSnackbar(message: string): void {\n    this.snackBar.open(message, 'Fermer', {\n      duration: 4000,\n      panelClass: ['info-snackbar']\n    });\n  }\n}\n","<div class=\"gap-analysis-container\">\n  <div class=\"gap-analysis-header\">\n    <h2>Analyse d'Écarts de Conformité</h2>\n  </div>\n\n  <div class=\"filter-container\">\n    <div class=\"filter-row\">\n      <mat-form-field appearance=\"outline\" class=\"filter-field\">\n        <mat-label>Sélectionner un référentiel</mat-label>\n        <mat-select [(value)]=\"selectedFramework\" (selectionChange)=\"loadGapAnalysis()\">\n          <mat-option *ngFor=\"let framework of frameworks\" [value]=\"framework.id\">\n            {{ framework.name }} ({{ framework.version }})\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"filter-field\">\n        <mat-label>Sélectionner un risque (optionnel)</mat-label>\n        <mat-select [(value)]=\"selectedRisk\" (selectionChange)=\"loadGapAnalysis()\">\n          <mat-option [value]=\"''\">Tous les risques</mat-option>\n          <mat-option *ngFor=\"let risk of risks\" [value]=\"risk.id\">\n            {{ risk.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div class=\"loading-error-container\" *ngIf=\"isLoading || error\">\n    <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div *ngIf=\"error\" class=\"error-message\">\n      <mat-icon>error</mat-icon>\n      <span>{{ error }}</span>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"!isLoading && !error\">\n    <div *ngIf=\"!selectedFramework\" class=\"no-framework-selected\">\n      <mat-icon>info</mat-icon>\n      <p>Veuillez sélectionner un référentiel pour afficher l'analyse d'écarts.</p>\n    </div>\n\n    <ng-container *ngIf=\"selectedFramework && gapAnalysisResult\">\n      <!-- Dashboard Cards -->\n      <div class=\"dashboard-cards\">\n        <mat-card class=\"dashboard-card\">\n          <div class=\"card-content\">\n            <div class=\"card-icon compliant\">\n              <mat-icon>check_circle</mat-icon>\n            </div>\n            <div class=\"card-stats\">\n              <span class=\"stat-value\">{{compliantCount}}</span>\n              <span class=\"stat-label\">Conforme</span>\n            </div>\n          </div>\n        </mat-card>\n\n        <mat-card class=\"dashboard-card\">\n          <div class=\"card-content\">\n            <div class=\"card-icon non-compliant\">\n              <mat-icon>cancel</mat-icon>\n            </div>\n            <div class=\"card-stats\">\n              <span class=\"stat-value\">{{nonCompliantCount}}</span>\n              <span class=\"stat-label\">Non conforme</span>\n            </div>\n          </div>\n        </mat-card>\n\n        <mat-card class=\"dashboard-card\">\n          <div class=\"card-content\">\n            <div class=\"card-icon partially-compliant\">\n              <mat-icon>remove_circle</mat-icon>\n            </div>\n            <div class=\"card-stats\">\n              <span class=\"stat-value\">{{partiallyCompliantCount}}</span>\n              <span class=\"stat-label\">Partiellement conforme</span>\n            </div>\n          </div>\n        </mat-card>\n\n        <mat-card class=\"dashboard-card\">\n          <div class=\"card-content\">\n            <div class=\"card-icon not-applicable\">\n              <mat-icon>not_interested</mat-icon>\n            </div>\n            <div class=\"card-stats\">\n              <span class=\"stat-value\">{{notApplicableCount}}</span>\n              <span class=\"stat-label\">Non applicable</span>\n            </div>\n          </div>\n        </mat-card>\n      </div>\n\n      <!-- Compliance Progress -->\n      <mat-card class=\"progress-card\">\n        <mat-card-header>\n          <mat-card-title>Progression de la conformité</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"progress-bar-container\">\n            <div class=\"progress-label\">\n              <span>{{compliancePercentage | number:'1.0-1'}}%</span>\n            </div>\n            <mat-progress-bar mode=\"determinate\" [value]=\"compliancePercentage\"></mat-progress-bar>\n          </div>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- Gap Analysis Table -->\n      <mat-card class=\"gap-table-card\">\n        <mat-card-header>\n          <mat-card-title>Exigences non couvertes ({{dataSource.data.length}})</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"gap-table-container\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <!-- Code Column -->\n              <ng-container matColumnDef=\"code\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Code </th>\n                <td mat-cell *matCellDef=\"let requirement\"> {{requirement.code}} </td>\n              </ng-container>\n\n              <!-- Description Column -->\n              <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef> Description </th>\n                <td mat-cell *matCellDef=\"let requirement\"> {{requirement.description}} </td>\n              </ng-container>\n\n              <!-- Actions Column -->\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> Actions </th>\n                <td mat-cell *matCellDef=\"let requirement\">\n                  <button mat-icon-button color=\"primary\" \n                          [matTooltip]=\"'Créer un plan d\\'action'\" \n                          (click)=\"createActionPlan(requirement)\">\n                    <mat-icon>assignment</mat-icon>\n                  </button>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons></mat-paginator>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </ng-container>\n  </ng-container>\n</div>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\n\n// Material Modules\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n// Guards\nimport { AdminGuard } from '../../core/guards/admin.guard';\n\n// Components\nimport { ComplianceComponent } from './compliance.component';\nimport { FrameworksComponent } from './frameworks/frameworks.component';\nimport { FrameworkDetailComponent } from './frameworks/framework-detail/framework-detail.component';\nimport { FrameworkFormDialogComponent } from './frameworks/framework-form-dialog/framework-form-dialog.component';\nimport { FrameworkEditComponent } from './frameworks/framework-edit/framework-edit.component';\nimport { RequirementFormDialogComponent } from './requirements/requirement-form-dialog/requirement-form-dialog.component';\nimport { RequirementsComponent } from './requirements/requirements/requirements.component';\nimport { MappingsComponent } from './mappings/mappings/mappings.component';\nimport { GapAnalysisComponent } from './gap-analysis/gap-analysis/gap-analysis.component';\n\n// Services\nimport { ComplianceFrameworkService } from './services/compliance-framework.service';\nimport { ComplianceRequirementService } from './services/compliance-requirement.service';\nimport { RiskComplianceMappingService } from './services/risk-compliance-mapping.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComplianceComponent,\n    children: [\n      { path: '', redirectTo: 'frameworks', pathMatch: 'full' },\n      { path: 'frameworks', component: FrameworksComponent },\n      { path: 'frameworks/:id', component: FrameworkDetailComponent },\n      { \n        path: 'frameworks/edit/:id', \n        component: FrameworkEditComponent,\n        canActivate: [AdminGuard]\n      },\n      { path: 'requirements', component: RequirementsComponent },\n      { path: 'mappings', component: MappingsComponent },\n      { path: 'gap-analysis', component: GapAnalysisComponent }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    ComplianceComponent,\n    FrameworksComponent,\n    FrameworkDetailComponent,\n    FrameworkFormDialogComponent,\n    RequirementFormDialogComponent,\n    FrameworkEditComponent,\n    RequirementsComponent,\n    MappingsComponent,\n    GapAnalysisComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    \n    // Material Modules\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatExpansionModule,\n    MatSlideToggleModule,\n    MatAutocompleteModule,\n    MatSnackBarModule\n  ],\n  providers: [\n    ComplianceFrameworkService,\n    ComplianceRequirementService,\n    RiskComplianceMappingService\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ComplianceModule { } "],"mappings":"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","names":["group","_c0","_c1","window","state","_c1","_c0","ComplianceRequirementType","ComplianceStatus","_c1","_c2","_c0","_c0","_c0","_c0","success"],"x_google_ignoreList":[0,1]}