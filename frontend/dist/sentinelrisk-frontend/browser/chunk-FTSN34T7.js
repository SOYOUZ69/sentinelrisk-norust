import{J as h}from"./chunk-WDJEBGND.js";import{B as o,Mb as m,R as d,U as p,a as c,b as l,p as i,r as a}from"./chunk-QYV7G3Z4.js";var f=(()=>{class n{constructor(e,r){this.apiService=e,this.http=r,this.basePath="/risks"}getRisks(){return this.apiService.get(this.basePath).pipe(a(e=>e.map(r=>this.mapRiskResponse(r))),o(e=>(console.error("Erreur lors de la r\xE9cup\xE9ration des risques",e),i(()=>new Error("Impossible de r\xE9cup\xE9rer la liste des risques. Veuillez r\xE9essayer.")))))}getRisk(e){return this.apiService.get(`${this.basePath}/${e}`).pipe(a(r=>this.mapRiskResponse(r)),o(r=>(console.error(`Erreur lors de la r\xE9cup\xE9ration du risque ${e}`,r),i(()=>new Error("Impossible de r\xE9cup\xE9rer les d\xE9tails du risque. Veuillez r\xE9essayer.")))))}createRisk(e){let r=this.formatRiskRequest(e);return this.apiService.post(this.basePath,r).pipe(a(t=>this.mapRiskResponse(t)),o(t=>{console.error("Erreur lors de la cr\xE9ation du risque",t);let s=this.getErrorMessage(t)||"Impossible de cr\xE9er le risque. Veuillez r\xE9essayer.";return i(()=>new Error(s))}))}updateRisk(e,r){let t=this.formatRiskRequest(r);return this.apiService.put(`${this.basePath}/${e}`,t).pipe(a(s=>this.mapRiskResponse(s)),o(s=>{console.error(`Erreur lors de la mise \xE0 jour du risque ${e}`,s);let u=this.getErrorMessage(s)||"Impossible de mettre \xE0 jour le risque. Veuillez r\xE9essayer.";return i(()=>new Error(u))}))}updateRiskControls(e,r){let t=r.map(s=>typeof s=="string"?+s:s);return this.apiService.put(`${this.basePath}/${e}/controls`,t).pipe(a(s=>this.mapRiskResponse(s)),o(s=>{console.error(`Erreur lors de la mise \xE0 jour des contr\xF4les du risque ${e}`,s);let u=this.getErrorMessage(s)||"Impossible de mettre \xE0 jour les contr\xF4les associ\xE9s au risque. Veuillez r\xE9essayer.";return i(()=>new Error(u))}))}deleteRisk(e){return this.apiService.delete(`${this.basePath}/${e}`).pipe(o(r=>(console.error(`Erreur lors de la suppression du risque ${e}`,r),i(()=>new Error("Impossible de supprimer le risque. Veuillez r\xE9essayer.")))))}getRisksByCategory(e){return this.apiService.get(`${this.basePath}/category/${e}`).pipe(o(r=>(console.error(`Erreur lors de la r\xE9cup\xE9ration des risques de la cat\xE9gorie ${e}`,r),i(()=>new Error("Impossible de r\xE9cup\xE9rer les risques de cette cat\xE9gorie. Veuillez r\xE9essayer.")))))}getHighScoreRisks(){return this.apiService.get(`${this.basePath}/high-score`).pipe(o(e=>(console.error("Erreur lors de la r\xE9cup\xE9ration des risques \xE0 score \xE9lev\xE9",e),i(()=>new Error("Impossible de r\xE9cup\xE9rer les risques \xE0 score \xE9lev\xE9. Veuillez r\xE9essayer.")))))}formatRiskRequest(e){let r=e.categoryId||e.category?.id;return{name:e.name,description:e.description,categoryId:r,impactLevel:e.impactLevel,probabilityLevel:e.probabilityLevel,status:e.status,mitigationPlan:e.mitigationPlan}}getErrorMessage(e){if(e.error){if(typeof e.error=="string")return e.error;if(e.error.message)return e.error.message;if(typeof e.error=="object"){let r=Object.entries(e.error).map(([t,s])=>`${t}: ${s}`).join(", ");if(r)return`Erreurs de validation: ${r}`}}return e.statusText||"Une erreur est survenue"}mapRiskResponse(e){let r=e.categoryId?{id:e.categoryId.toString(),name:e.categoryName||"Sans cat\xE9gorie"}:void 0;return l(c({},e),{id:e.id?.toString(),category:r,score:e.riskScore||0,createdAt:e.createdAt?new Date(e.createdAt):new Date,updatedAt:e.updatedAt?new Date(e.updatedAt):new Date})}static{this.\u0275fac=function(r){return new(r||n)(p(h),p(m))}}static{this.\u0275prov=d({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();export{f as a};
