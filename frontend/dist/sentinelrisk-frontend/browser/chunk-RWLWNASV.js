import{a as u}from"./chunk-3ZNKIO6H.js";import{D as t,T as n,W as l,r as s,t as o}from"./chunk-KODBDAN5.js";var h=(()=>{class a{constructor(e){this.apiService=e,this.basePath="/risk-compliance-mappings",this.gapAnalysisPath="/risk-compliance-mappings/gap-analysis"}getMappings(){return this.apiService.get(this.basePath).pipe(t(e=>(console.error("Erreur lors de la r\xE9cup\xE9ration des mappings",e),s(()=>new Error("Impossible de r\xE9cup\xE9rer la liste des mappings. Veuillez r\xE9essayer.")))))}getMappingsByRisk(e){return this.apiService.get(`${this.basePath}?riskId=${e}`).pipe(t(r=>(console.error(`Erreur lors de la r\xE9cup\xE9ration des mappings du risque ${e}`,r),s(()=>new Error("Impossible de r\xE9cup\xE9rer les mappings de ce risque. Veuillez r\xE9essayer.")))))}getMappingsByFramework(e){return this.apiService.get(`${this.basePath}?frameworkId=${e}`).pipe(t(r=>(console.error(`Erreur lors de la r\xE9cup\xE9ration des mappings du framework ${e}`,r),s(()=>new Error("Impossible de r\xE9cup\xE9rer les mappings de ce framework. Veuillez r\xE9essayer.")))))}getMapping(e){return this.apiService.get(`${this.basePath}/${e}`).pipe(t(r=>(console.error(`Erreur lors de la r\xE9cup\xE9ration du mapping ${e}`,r),s(()=>new Error("Impossible de r\xE9cup\xE9rer les d\xE9tails du mapping. Veuillez r\xE9essayer.")))))}createMapping(e){return this.apiService.post(this.basePath,e).pipe(t(r=>(console.error("Erreur lors de la cr\xE9ation du mapping",r),s(()=>new Error("Impossible de cr\xE9er le mapping. Veuillez r\xE9essayer.")))))}updateMapping(e,r){return this.apiService.put(`${this.basePath}/${e}`,r).pipe(t(i=>(console.error(`Erreur lors de la mise \xE0 jour du mapping ${e}`,i),s(()=>new Error("Impossible de mettre \xE0 jour le mapping. Veuillez r\xE9essayer.")))))}deleteMapping(e){return this.apiService.delete(`${this.basePath}/${e}`).pipe(t(r=>(console.error(`Erreur lors de la suppression du mapping ${e}`,r),s(()=>new Error("Impossible de supprimer le mapping. Veuillez r\xE9essayer.")))))}getGapAnalysis(e,r){let i=`${this.gapAnalysisPath}?frameworkId=${e}`;return r&&(i+=`&riskId=${r}`),this.apiService.get(i).pipe(t(p=>(console.error(`Erreur lors de la r\xE9cup\xE9ration de l'analyse d'\xE9carts. Framework: ${e}, Risque: ${r||"non sp\xE9cifi\xE9"}`,p),s(()=>new Error("Impossible de r\xE9cup\xE9rer l'analyse d'\xE9carts. Veuillez r\xE9essayer.")))))}getCompliancePercentage(e,r){return this.apiService.get(`${this.basePath}/compliance-percentage?riskId=${e}&frameworkId=${r}`).pipe(o(i=>i.percentage),t(i=>(console.error(`Erreur lors du calcul du pourcentage de conformit\xE9 pour le risque ${e} et le framework ${r}`,i),s(()=>new Error("Impossible de calculer le pourcentage de conformit\xE9. Veuillez r\xE9essayer.")))))}getMappingByRiskAndRequirement(e,r){return this.apiService.get(`${this.basePath}?riskId=${e}&requirementId=${r}`).pipe(t(i=>(console.error(`Erreur lors de la r\xE9cup\xE9ration du mapping pour le risque ${e} et l'exigence ${r}`,i),s(()=>new Error("Impossible de r\xE9cup\xE9rer le mapping sp\xE9cifique. Veuillez r\xE9essayer.")))))}getErrorMessage(e){if(e.error){if(typeof e.error=="string")return e.error;if(e.error.message)return e.error.message;if(typeof e.error=="object"){let r=Object.entries(e.error).map(([i,p])=>`${i}: ${p}`).join(", ");if(r)return`Erreurs de validation: ${r}`}}return e.statusText||"Une erreur est survenue"}static{this.\u0275fac=function(r){return new(r||a)(l(u))}}static{this.\u0275prov=n({token:a,factory:a.\u0275fac,providedIn:"root"})}}return a})();export{h as a};
